{"ast":null,"code":"import { environment } from '@ui/environments/environment';\nimport { ApiService } from '@ui/core/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PortfolioApiService = /*#__PURE__*/(() => {\n  class PortfolioApiService extends ApiService {\n    constructor(http) {\n      super(http);\n    }\n    activateProfile(profileId) {\n      const headers = this.contentTypeHeader();\n      return this.http.put(`${environment.API_URL}/portfolio/profiles/${profileId}/activate`, {}, {\n        headers\n      });\n    }\n    createProfile(profile) {\n      const headers = this.contentTypeHeader();\n      return this.http.post(`${environment.API_URL}/portfolio/profiles`, profile, {\n        headers\n      });\n    }\n    deleteProfile(id) {\n      return this.http.delete(`${environment.API_URL}/portfolio/profiles/${id}`);\n    }\n    getProfiles() {\n      return this.http.get(`${environment.API_URL}/portfolio/profiles`);\n    }\n    getProfileStatuses() {\n      return this.http.get(`${environment.API_URL}/portfolio/profile-statuses`);\n    }\n    getProfileTechnologies(id) {\n      return this.http.get(`${environment.API_URL}/portfolio/profiles/${id}/technologies`);\n    }\n    updateProfile(profile) {\n      const headers = this.contentTypeHeader();\n      return this.http.put(`${environment.API_URL}/portfolio/profiles/${profile.id}`, profile, {\n        headers\n      });\n    }\n    createProject(project) {\n      const headers = this.contentTypeHeader();\n      return this.http.post(`${environment.API_URL}/portfolio/projects`, project, {\n        headers\n      });\n    }\n    deleteProject(id) {\n      return this.http.delete(`${environment.API_URL}/portfolio/projects/${id}`);\n    }\n    getProject(id) {\n      return this.http.get(`${environment.API_URL}/portfolio/projects/${id}`);\n    }\n    getProjects() {\n      return this.http.get(`${environment.API_URL}/portfolio/projects`);\n    }\n    updateProject(project) {\n      const headers = this.contentTypeHeader();\n      return this.http.put(`${environment.API_URL}/portfolio/projects/${project.id}`, project, {\n        headers\n      });\n    }\n    static #_ = this.ɵfac = function PortfolioApiService_Factory(t) {\n      return new (t || PortfolioApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: PortfolioApiService,\n      factory: PortfolioApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PortfolioApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}