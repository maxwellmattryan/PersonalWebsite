{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from '@ui/environments/environment';\nimport { ApiService } from '@ui/core/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FileApiService = /*#__PURE__*/(() => {\n  class FileApiService extends ApiService {\n    constructor(http) {\n      super(http);\n      this.assetsBucketPrefix = 'https://storage.googleapis.com/mattmaxwell-assets';\n    }\n    // CAUTION: This RegExp match assumes that there is only one '.' in the filename\n    // and that it denotes the file extension.\n    getImageUri(relativeUri = '', format) {\n      const noExt = relativeUri.match(/[^.]*/)[0];\n      return `${this.assetsBucketPrefix}/${noExt}.${format}`;\n    }\n    uploadFile(formData, fileData) {\n      const headers = this.contentTypeHeader('multipart/form-data');\n      let params = new HttpParams().set('bucket', fileData.bucket).set('visibility', fileData.visibility).set('dir', fileData.dir);\n      return this.http.post(`${environment.API_URL}/files/upload`, formData, {\n        headers: headers,\n        params: params\n      });\n    }\n    deleteFile(bucket, uri) {\n      let params = new HttpParams().set('bucket', bucket).set('uri', uri);\n      return this.http.delete(`${environment.API_URL}/files/delete`, {\n        params: params\n      });\n    }\n    static #_ = this.ɵfac = function FileApiService_Factory(t) {\n      return new (t || FileApiService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FileApiService,\n      factory: FileApiService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FileApiService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}