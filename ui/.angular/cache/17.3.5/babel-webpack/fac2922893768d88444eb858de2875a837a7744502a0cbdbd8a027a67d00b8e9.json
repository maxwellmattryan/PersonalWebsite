{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { BlogPost } from '../../models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ui/core/auth\";\nimport * as i2 from \"../../services\";\nimport * as i3 from \"@ui/core/services\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../../core/components/loading-spinner/loading-spinner.component\";\nimport * as i9 from \"@angular/material/checkbox\";\nimport * as i10 from \"@angular/material/radio\";\nconst _c0 = (a0, a1) => ({\n  \"btn-loading\": a0,\n  \"btn--inactive\": a1\n});\nfunction BlogPostEditorComponent_div_0_mat_radio_button_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const author_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"value\", ctx_r1.buildAuthorName(author_r3));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.buildAuthorName(author_r3));\n  }\n}\nfunction BlogPostEditorComponent_div_0_mat_radio_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r4.status);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(status_r4.status);\n  }\n}\nfunction BlogPostEditorComponent_div_0_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-checkbox\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const idx_r5 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", idx_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.topicData[idx_r5].name);\n  }\n}\nfunction BlogPostEditorComponent_div_0_ng_container_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelement(2, \"div\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction BlogPostEditorComponent_div_0_ng_container_57_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction BlogPostEditorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Blog Post Editor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function BlogPostEditorComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"Title\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\")(9, \"br\")(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n    i0.ɵɵtext(13, \"Subtitle\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\")(15, \"br\")(16, \"input\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 7);\n    i0.ɵɵtext(19, \"Author\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"br\")(21, \"br\");\n    i0.ɵɵelementStart(22, \"mat-radio-group\", 10);\n    i0.ɵɵtemplate(23, BlogPostEditorComponent_div_0_mat_radio_button_23_Template, 2, 2, \"mat-radio-button\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 7);\n    i0.ɵɵtext(26, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"br\")(28, \"br\");\n    i0.ɵɵelementStart(29, \"mat-radio-group\", 12);\n    i0.ɵɵtemplate(30, BlogPostEditorComponent_div_0_mat_radio_button_30_Template, 2, 2, \"mat-radio-button\", 11);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(31, \"div\", 6)(32, \"label\", 7);\n    i0.ɵɵtext(33, \"Topics\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(34, \"br\")(35, \"br\");\n    i0.ɵɵtemplate(36, BlogPostEditorComponent_div_0_div_36_Template, 4, 2, \"div\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(37, \"div\", 6)(38, \"label\", 7);\n    i0.ɵɵtext(39, \"Preview\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(40, \"br\")(41, \"br\")(42, \"textarea\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(43, \"div\", 15)(44, \"label\", 7);\n    i0.ɵɵtext(45, \"Content\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(46, \"br\")(47, \"br\")(48, \"textarea\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(49, \"div\", 6)(50, \"label\", 7);\n    i0.ɵɵtext(51, \"Image URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"br\")(53, \"br\")(54, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"button\", 18);\n    i0.ɵɵtemplate(56, BlogPostEditorComponent_div_0_ng_container_56_Template, 3, 0, \"ng-container\", 19)(57, BlogPostEditorComponent_div_0_ng_container_57_Template, 2, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.postForm);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.authorData)(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.statusData)(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.postForm.controls.topics[\"controls\"])(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c0, ctx_r1.isSubmittingForm, !ctx_r1.postForm.valid))(\"disabled\", !ctx_r1.postForm.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmittingForm);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSubmittingForm);\n  }\n}\nfunction BlogPostEditorComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ui-loading-spinner\");\n  }\n}\nexport let BlogPostEditorComponent = /*#__PURE__*/(() => {\n  class BlogPostEditorComponent {\n    constructor(authService, blogApiService, blogEditorService, blogComparisonService, notificationService, seoService, titleService, trackingService, validationService, formBuilder, router) {\n      this.authService = authService;\n      this.blogApiService = blogApiService;\n      this.blogEditorService = blogEditorService;\n      this.blogComparisonService = blogComparisonService;\n      this.notificationService = notificationService;\n      this.seoService = seoService;\n      this.titleService = titleService;\n      this.trackingService = trackingService;\n      this.validationService = validationService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.authorData = [];\n      this.statusData = [];\n      this.topicData = [];\n      this.isLoaded = false;\n      this.isSubmittingForm = false;\n    }\n    ngOnDestroy() {\n      this.blogEditorService.setPost(null);\n    }\n    ngOnInit() {\n      this.titleService.setTitle('Blog Post Editor | Matthew Maxwell');\n      this.checkForAdmin();\n      this.setPageHideEvent();\n      this.initPostForm();\n    }\n    checkForAdmin() {\n      if (!this.authService.isLoggedIn()) this.router.navigate(['']);\n    }\n    setPageHideEvent() {\n      window.onpagehide = () => {\n        this.blogEditorService.setPost(null);\n      };\n    }\n    initPostForm() {\n      this.loadPostData();\n      this.loadAuthorData();\n      this.loadStatusData();\n      this.loadTopicData();\n      this.buildPostForm();\n    }\n    loadPostData() {\n      this.postData = this.blogEditorService.getPost();\n    }\n    loadAuthorData() {\n      this.blogApiService.getBlogAuthors().subscribe(res => {\n        this.authorData = res;\n      });\n    }\n    loadStatusData() {\n      this.blogApiService.getPostStatuses().subscribe(res => {\n        this.statusData = res;\n      });\n    }\n    loadTopicData() {\n      this.blogApiService.getTopics().subscribe(res => {\n        this.topicData = res.sort(this.blogComparisonService.topics);\n        if (this.postData) {\n          this.setTopicControls(this.postData.topics.map(t => t.id));\n        } else {\n          this.setTopicControls([]);\n        }\n        this.isLoaded = true;\n      });\n    }\n    setTopicControls(associatedTopicIds) {\n      this.topicData.forEach(t => {\n        const control = this.formBuilder.control(associatedTopicIds.includes(t.id));\n        this.postForm.controls.topics.push(control);\n      });\n    }\n    buildPostForm() {\n      if (this.postData) {\n        this.postForm = this.formBuilder.group({\n          title: this.formBuilder.control(this.postData.title, [Validators.required, Validators.maxLength(255)]),\n          subtitle: this.formBuilder.control(this.postData.subtitle, [Validators.required]),\n          author: this.formBuilder.control(this.buildAuthorName(this.postData.author), [Validators.required]),\n          status: this.formBuilder.control(this.postData.status.status, [Validators.required]),\n          topics: this.formBuilder.array(this.topicData, [this.validationService.hasMinElements(1)]),\n          preview: this.formBuilder.control(this.postData.preview, [Validators.required]),\n          content: this.formBuilder.control(this.postData.content, [Validators.required]),\n          image_url: this.formBuilder.control(this.postData.image_url, [Validators.required])\n        });\n      } else {\n        this.postForm = this.formBuilder.group({\n          title: this.formBuilder.control('', [Validators.required, Validators.maxLength(255)]),\n          subtitle: this.formBuilder.control('', [Validators.required]),\n          author: this.formBuilder.control('Matthew Maxwell', [Validators.required]),\n          status: this.formBuilder.control('DRAFT', [Validators.required]),\n          topics: this.formBuilder.array([], [this.validationService.hasMinElements(1)]),\n          preview: this.formBuilder.control('', [Validators.required]),\n          content: this.formBuilder.control('', [Validators.required]),\n          image_url: this.formBuilder.control('', [Validators.required])\n        });\n      }\n    }\n    buildAuthorName(author) {\n      return `${author.first_name} ${author.last_name}`;\n    }\n    onSubmit() {\n      this.isSubmittingForm = true;\n      const post = this.buildFormPostData();\n      if (post.id === undefined) {\n        this.blogApiService.createPost(post).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification('Successfully created new post!');\n          this.router.navigate([`blog/posts/${this.seoService.getCanonicalUrl(res.id, res.title)}`]);\n        });\n      } else {\n        this.blogApiService.updatePost(post).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification('Successfully updated existing post!');\n          this.router.navigate([`blog/posts/${this.seoService.getCanonicalUrl(res.id, res.title)}`]);\n        });\n      }\n    }\n    buildFormPostData() {\n      const author = this.buildFormAuthorData();\n      const status = this.buildFormStatusData();\n      const topics = this.buildFormTopicData();\n      return new BlogPost({\n        ...this.postForm.value,\n        id: this.postData ? this.postData.id : undefined,\n        author: author,\n        status: status,\n        topics: topics\n      });\n    }\n    buildFormAuthorData() {\n      return this.authorData.find(a => this.buildAuthorName(a) === this.postForm.value.author);\n    }\n    buildFormStatusData() {\n      return this.statusData.find(s => s.status === this.postForm.value.status);\n    }\n    buildFormTopicData() {\n      return this.postForm.value.topics.map((t, idx) => {\n        if (t) return this.topicData[idx];\n      }).filter(t => t !== undefined);\n    }\n    static #_ = this.ɵfac = function BlogPostEditorComponent_Factory(t) {\n      return new (t || BlogPostEditorComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.BlogApiService), i0.ɵɵdirectiveInject(i2.BlogEditorService), i0.ɵɵdirectiveInject(i2.BlogComparisonService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i3.SeoService), i0.ɵɵdirectiveInject(i4.Title), i0.ɵɵdirectiveInject(i3.TrackingService), i0.ɵɵdirectiveInject(i3.ValidationService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: BlogPostEditorComponent,\n      selectors: [[\"ui-blog-post-editor\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"class\", \"section editor\", 4, \"ngIf\", \"ngIfElse\"], [1, \"section\", \"editor\"], [1, \"editor__header\"], [1, \"line-divider\"], [1, \"editor__form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-field\", \"editor__form-field\"], [1, \"form-field-label\", \"editor__form-field-label\"], [\"formControlName\", \"title\", \"required\", \"\", \"autofocus\", \"\"], [\"formControlName\", \"subtitle\", \"required\", \"\", \"autofocus\", \"\"], [\"formControlName\", \"author\", \"name\", \"author\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"formControlName\", \"status\", \"name\", \"status\", \"required\", \"\"], [\"class\", \"form__checkbox-item\", \"formArrayName\", \"topics\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"formControlName\", \"preview\", \"required\", \"\"], [1, \"form-field\", \"form-field--large\", \"editor__form-field\"], [\"formControlName\", \"content\", \"required\", \"\"], [\"formControlName\", \"image_url\", \"required\", \"\"], [\"aria-label\", \"Submit post\", 1, \"btn\", \"editor__form-btn\", \"editor__form-btn--submit\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\"], [3, \"value\"], [\"formArrayName\", \"topics\", 1, \"form__checkbox-item\"], [3, \"formControlName\"], [1, \"btn-loader-container\"], [1, \"btn-loader\"]],\n      template: function BlogPostEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, BlogPostEditorComponent_div_0_Template, 58, 14, \"div\", 1)(1, BlogPostEditorComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r6 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoaded)(\"ngIfElse\", loading_r6);\n        }\n      },\n      dependencies: [i7.NgClass, i7.NgForOf, i7.NgIf, i8.LoadingSpinnerComponent, i9.MatCheckbox, i10.MatRadioGroup, i10.MatRadioButton, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i5.FormArrayName],\n      encapsulation: 2\n    });\n  }\n  return BlogPostEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}