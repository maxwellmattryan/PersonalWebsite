{"ast":null,"code":"import { ModalComponent } from '@ui/core/components/modal/modal.component';\nimport { Validators } from '@angular/forms';\nimport { Buckets, BucketVisibilities } from \"@ui/modules/file/file.type\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services\";\nimport * as i2 from \"@ui/modules/file/services/file.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@ui/core/services\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/radio\";\nconst _c0 = a0 => ({\n  \"btn-loading\": a0\n});\nconst _c1 = (a0, a1) => ({\n  \"btn-loading\": a0,\n  \"btn--inactive\": a1\n});\nfunction FileUploadModalComponent_ng_container_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelement(2, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FileUploadModalComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.filename(), \" \");\n  }\n}\nfunction FileUploadModalComponent_mat_radio_button_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const b_r4 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", b_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(b_r4);\n  }\n}\nfunction FileUploadModalComponent_mat_radio_button_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const v_r5 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", v_r5);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(v_r5);\n  }\n}\nfunction FileUploadModalComponent_ng_container_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelement(2, \"div\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction FileUploadModalComponent_ng_container_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let FileUploadModalComponent = /*#__PURE__*/(() => {\n  class FileUploadModalComponent extends ModalComponent {\n    constructor(changeDetectorRef, elem, fileApiService, fileService, formBuilder, notificationService, trackingService) {\n      super(elem, formBuilder);\n      this.changeDetectorRef = changeDetectorRef;\n      this.elem = elem;\n      this.fileApiService = fileApiService;\n      this.fileService = fileService;\n      this.formBuilder = formBuilder;\n      this.notificationService = notificationService;\n      this.trackingService = trackingService;\n      this.isSelectingFile = false;\n      this.isUploadingFile = false;\n      /**\n       * NOTE: The buckets and visibilities are both copied so that they are\n       * accessible from the HTML template.\n       */\n      this.buckets = Buckets;\n      this.visibilities = BucketVisibilities;\n    }\n    ngOnInit() {\n      this.buildModalForm();\n    }\n    buildModalForm() {\n      const pathRegex = /^(?!\\/)(?!.*(?:^|\\/)\\.\\.(?:\\/|$))+/;\n      this.modalForm = this.formBuilder.group({\n        file: this.formBuilder.control('', [Validators.required]),\n        bucket: this.formBuilder.control(this.buckets[0], [Validators.required]),\n        visibility: this.formBuilder.control(BucketVisibilities[0], [Validators.required]),\n        dir: this.formBuilder.control('', [Validators.required, Validators.pattern(pathRegex)])\n      });\n    }\n    closeModal() {\n      super.closeModal();\n      this.resetModal();\n    }\n    resetModal() {\n      this.isSelectingFile = false;\n      this.isUploadingFile = false;\n      this.file = undefined;\n      this.buildModalForm();\n      this.changeDetectorRef.detectChanges();\n    }\n    selectFile(elem) {\n      elem.click();\n    }\n    changeFilename(event) {\n      this.file = event.target.files[0];\n    }\n    submitModalForm() {\n      if (!this.file) return;\n      this.isUploadingFile = true;\n      const fileData = this.buildModalFormData();\n      const formData = new FormData();\n      formData.append('file', fileData.file, fileData.file.name);\n      this.fileApiService.uploadFile(formData, fileData).subscribe(res => {\n        this.notificationService.createNotification('Successfully uploaded new file!', 'file', 30000, res.url);\n        this.resetModal();\n      }, error => {\n        this.notificationService.createNotification(error.error.message);\n        this.isUploadingFile = false;\n        this.changeDetectorRef.detectChanges();\n      });\n    }\n    buildModalFormData() {\n      return {\n        file: this.file,\n        bucket: this.fileService.getBucketName(this.modalForm.value.bucket),\n        visibility: this.fileService.getBucketVisibility(this.modalForm.value.visibility),\n        dir: this.modalForm.value.dir\n      };\n    }\n    filename() {\n      return this.file ? this.file.name : 'Select File';\n    }\n    static #_ = this.ɵfac = function FileUploadModalComponent_Factory(t) {\n      return new (t || FileUploadModalComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FileApiService), i0.ɵɵdirectiveInject(i2.FileService), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(i4.TrackingService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FileUploadModalComponent,\n      selectors: [[\"ui-file-upload-modal\"]],\n      features: [i0.ɵɵInheritDefinitionFeature],\n      decls: 47,\n      vars: 18,\n      consts: [[\"fileInput\", \"\"], [1, \"modal\", \"hidden\", 3, \"id\"], [1, \"modal__background\", 3, \"click\"], [1, \"modal__body\"], [1, \"modal__close-btn-container\"], [\"aria-label\", \"Close shop checkout modal\", 1, \"modal__close-btn\", 3, \"click\"], [1, \"modal__close-btn-spacer\"], [1, \"modal__content\"], [1, \"modal__header\"], [1, \"modal__info\"], [\"enctype\", \"multipart/form-data\", 1, \"editor__form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-field\", \"editor__form-field\"], [1, \"form-field-label\", \"editor__form-field-label\"], [\"type\", \"button\", 1, \"file-input__label\", \"editor__form-field-label\", 3, \"click\", \"ngClass\"], [4, \"ngIf\"], [\"formControlName\", \"file\", \"type\", \"file\", \"size\", \"60\", \"required\", \"\", \"autofocus\", \"\", 1, \"file-input__field\", 3, \"change\"], [1, \"form-field\", \"editor__form-field-row\"], [\"formControlName\", \"bucket\", \"name\", \"bucket\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"formControlName\", \"visibility\", \"name\", \"visibility\", \"required\", \"\"], [\"formControlName\", \"dir\", \"required\", \"\", \"autofocus\", \"\"], [\"aria-label\", \"Select file to upload\", 1, \"btn\", \"editor__form-btn\", \"editor__form-btn--submit\", 3, \"ngClass\", \"disabled\"], [1, \"btn-loader-container\"], [1, \"btn-loader\"], [3, \"value\"]],\n      template: function FileUploadModalComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          const _r1 = i0.ɵɵgetCurrentView();\n          i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n          i0.ɵɵlistener(\"click\", function FileUploadModalComponent_Template_div_click_1_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.closeModal());\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(2, \"div\", 3)(3, \"div\", 4)(4, \"button\", 5);\n          i0.ɵɵlistener(\"click\", function FileUploadModalComponent_Template_button_click_4_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.closeModal());\n          });\n          i0.ɵɵtext(5, \" \\u2716 \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(6, \"div\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(7, \"div\", 7)(8, \"h1\", 8);\n          i0.ɵɵtext(9, \"Upload File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 9);\n          i0.ɵɵtext(11, \" Please select a file and specify a bucket, visibility, and path for it, and it will be uploaded to Cloud Storage. \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"form\", 10);\n          i0.ɵɵlistener(\"ngSubmit\", function FileUploadModalComponent_Template_form_ngSubmit_12_listener() {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.submitModalForm());\n          });\n          i0.ɵɵelementStart(13, \"div\", 11)(14, \"label\", 12);\n          i0.ɵɵtext(15, \"File\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"br\")(17, \"br\");\n          i0.ɵɵelementStart(18, \"button\", 13);\n          i0.ɵɵlistener(\"click\", function FileUploadModalComponent_Template_button_click_18_listener() {\n            i0.ɵɵrestoreView(_r1);\n            const fileInput_r2 = i0.ɵɵreference(22);\n            return i0.ɵɵresetView(ctx.selectFile(fileInput_r2));\n          });\n          i0.ɵɵtemplate(19, FileUploadModalComponent_ng_container_19_Template, 3, 0, \"ng-container\", 14)(20, FileUploadModalComponent_ng_container_20_Template, 2, 1, \"ng-container\", 14);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(21, \"input\", 15, 0);\n          i0.ɵɵlistener(\"change\", function FileUploadModalComponent_Template_input_change_21_listener($event) {\n            i0.ɵɵrestoreView(_r1);\n            return i0.ɵɵresetView(ctx.changeFilename($event));\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(23, \"div\", 16)(24, \"div\", 11)(25, \"label\", 12);\n          i0.ɵɵtext(26, \"Bucket\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(27, \"br\")(28, \"br\");\n          i0.ɵɵelementStart(29, \"mat-radio-group\", 17);\n          i0.ɵɵtemplate(30, FileUploadModalComponent_mat_radio_button_30_Template, 2, 2, \"mat-radio-button\", 18);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(31, \"div\", 11)(32, \"label\", 12);\n          i0.ɵɵtext(33, \"Visibility\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(34, \"br\")(35, \"br\");\n          i0.ɵɵelementStart(36, \"mat-radio-group\", 19);\n          i0.ɵɵtemplate(37, FileUploadModalComponent_mat_radio_button_37_Template, 2, 2, \"mat-radio-button\", 18);\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(38, \"div\", 11)(39, \"label\", 12);\n          i0.ɵɵtext(40, \"Directory\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(41, \"br\")(42, \"br\")(43, \"input\", 20);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(44, \"button\", 21);\n          i0.ɵɵtemplate(45, FileUploadModalComponent_ng_container_45_Template, 3, 0, \"ng-container\", 14)(46, FileUploadModalComponent_ng_container_46_Template, 2, 0, \"ng-container\", 14);\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"id\", ctx.modalId);\n          i0.ɵɵadvance(12);\n          i0.ɵɵproperty(\"formGroup\", ctx.modalForm);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.isSelectingFile));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isSelectingFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isSelectingFile);\n          i0.ɵɵadvance(10);\n          i0.ɵɵproperty(\"ngForOf\", ctx.buckets)(\"ngForTrackBy\", ctx.trackingService.objectById);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngForOf\", ctx.visibilities)(\"ngForTrackBy\", ctx.trackingService.objectById);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c1, ctx.isUploadingFile, !ctx.modalForm.valid))(\"disabled\", !ctx.modalForm.valid);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isUploadingFile);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isUploadingFile);\n        }\n      },\n      dependencies: [i5.NgClass, i5.NgForOf, i5.NgIf, i6.MatRadioGroup, i6.MatRadioButton, i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return FileUploadModalComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}