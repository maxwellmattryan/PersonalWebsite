{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { PortfolioProfile, PortfolioProfileTechnology } from '../../models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ui/core/auth\";\nimport * as i4 from \"@ui/core/services\";\nimport * as i5 from \"../../services\";\nimport * as i6 from \"@angular/platform-browser\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../../core/components/loading-spinner/loading-spinner.component\";\nimport * as i9 from \"@angular/material/checkbox\";\nimport * as i10 from \"@angular/material/radio\";\nconst _c0 = (a0, a1) => ({\n  \"btn-loading\": a0,\n  \"btn--inactive\": a1\n});\nconst _c1 = a0 => ({\n  \"btn--inactive\": a0\n});\nfunction PortfolioProfileEditorComponent_div_0_mat_radio_button_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 20);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r3.status);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(status_r3.status);\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21)(1, \"mat-checkbox\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const idx_r4 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", idx_r4);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.projectData[idx_r4].name);\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_div_47_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function PortfolioProfileEditorComponent_div_0_div_47_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const idx_r7 = i0.ɵɵnextContext().index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changeTechnologyDisplayOrder(idx_r7, idx_r7 - 1));\n    });\n    i0.ɵɵtext(1, \"\\u25B2\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_div_47_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function PortfolioProfileEditorComponent_div_0_div_47_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const idx_r7 = i0.ɵɵnextContext().index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.changeTechnologyDisplayOrder(idx_r7, idx_r7 + 1));\n    });\n    i0.ɵɵtext(1, \"\\u25BC\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelement(1, \"input\", 24);\n    i0.ɵɵtemplate(2, PortfolioProfileEditorComponent_div_0_div_47_button_2_Template, 2, 0, \"button\", 25)(3, PortfolioProfileEditorComponent_div_0_div_47_button_3_Template, 2, 0, \"button\", 26);\n    i0.ɵɵelementStart(4, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function PortfolioProfileEditorComponent_div_0_div_47_Template_button_click_4_listener() {\n      const idx_r7 = i0.ɵɵrestoreView(_r5).index;\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.removeTechnology(idx_r7));\n    });\n    i0.ɵɵtext(5, \"\\u2715\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const idx_r7 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", idx_r7);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", idx_r7 !== 0);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", idx_r7 !== ctx_r1.profileForm.controls.technologies[\"controls\"].length - 1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r1.profileForm.controls.technologies[\"controls\"].length === 1))(\"disabled\", ctx_r1.profileForm.controls.technologies[\"controls\"].length === 1);\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_ng_container_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 30);\n    i0.ɵɵelement(2, \"div\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_ng_container_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PortfolioProfileEditorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Portfolio Profile Editor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function PortfolioProfileEditorComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\")(9, \"br\")(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n    i0.ɵɵtext(13, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\")(15, \"br\");\n    i0.ɵɵelementStart(16, \"mat-radio-group\", 9);\n    i0.ɵɵtemplate(17, PortfolioProfileEditorComponent_div_0_mat_radio_button_17_Template, 2, 2, \"mat-radio-button\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"div\", 6)(19, \"label\", 7);\n    i0.ɵɵtext(20, \"Projects\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"br\")(22, \"br\");\n    i0.ɵɵtemplate(23, PortfolioProfileEditorComponent_div_0_div_23_Template, 4, 2, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"div\", 6)(25, \"label\", 7);\n    i0.ɵɵtext(26, \"Tagline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(27, \"br\")(28, \"br\")(29, \"input\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(30, \"div\", 6)(31, \"label\", 7);\n    i0.ɵɵtext(32, \"Landing\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(33, \"br\")(34, \"br\")(35, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\", 6)(37, \"label\", 7);\n    i0.ɵɵtext(38, \"About\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(39, \"br\")(40, \"br\")(41, \"input\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"div\", 6)(43, \"label\", 7);\n    i0.ɵɵtext(44, \"Technologies\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(45, \"br\")(46, \"br\");\n    i0.ɵɵtemplate(47, PortfolioProfileEditorComponent_div_0_div_47_Template, 6, 7, \"div\", 15);\n    i0.ɵɵelement(48, \"br\");\n    i0.ɵɵelementStart(49, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function PortfolioProfileEditorComponent_div_0_Template_button_click_49_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.addTechnologyToForm());\n    });\n    i0.ɵɵtext(50, \"+\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(51, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"div\", 6)(53, \"label\", 7);\n    i0.ɵɵtext(54, \"Image URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(55, \"br\")(56, \"br\")(57, \"input\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(58, \"button\", 18);\n    i0.ɵɵtemplate(59, PortfolioProfileEditorComponent_div_0_ng_container_59_Template, 3, 0, \"ng-container\", 19)(60, PortfolioProfileEditorComponent_div_0_ng_container_60_Template, 2, 0, \"ng-container\", 19);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.profileForm);\n    i0.ɵɵadvance(13);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.statusData)(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.profileForm.controls.projects[\"controls\"])(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(24);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.profileForm.controls.technologies[\"controls\"])(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c0, ctx_r1.isSubmittingForm, !ctx_r1.profileForm.valid))(\"disabled\", !ctx_r1.profileForm.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmittingForm);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSubmittingForm);\n  }\n}\nfunction PortfolioProfileEditorComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ui-loading-spinner\");\n  }\n}\nexport let PortfolioProfileEditorComponent = /*#__PURE__*/(() => {\n  class PortfolioProfileEditorComponent {\n    constructor(router, changeDetectionRef, formBuilder, authService, notificationService, portfolioApiService, portfolioComparisonService, portfolioEditorService, portfolioProfileService, titleService, trackingService, validationService) {\n      this.router = router;\n      this.changeDetectionRef = changeDetectionRef;\n      this.formBuilder = formBuilder;\n      this.authService = authService;\n      this.notificationService = notificationService;\n      this.portfolioApiService = portfolioApiService;\n      this.portfolioComparisonService = portfolioComparisonService;\n      this.portfolioEditorService = portfolioEditorService;\n      this.portfolioProfileService = portfolioProfileService;\n      this.titleService = titleService;\n      this.trackingService = trackingService;\n      this.validationService = validationService;\n      this.projectData = [];\n      this.statusData = [];\n      this.technologyData = [];\n      this.isLoaded = false;\n      this.isSubmittingForm = false;\n    }\n    ngOnDestroy() {\n      this.portfolioEditorService.setProfile(null);\n    }\n    ngOnInit() {\n      this.titleService.setTitle('Portfolio Profile Editor | Matthew Maxwell');\n      this.checkForAdmin();\n      this.setPageHideEvent();\n      this.initProfileForm();\n      this.isLoaded = true;\n    }\n    checkForAdmin() {\n      if (!this.authService.isLoggedIn()) this.router.navigate(['']);\n    }\n    setPageHideEvent() {\n      window.onpagehide = () => {\n        this.portfolioEditorService.setProfile(null);\n      };\n    }\n    initProfileForm() {\n      this.loadProfileData();\n      this.loadProjectData();\n      this.loadStatusData();\n      this.loadTechnologyData();\n      this.buildProfileForm();\n    }\n    loadProfileData() {\n      this.profileData = this.portfolioEditorService.getProfile();\n    }\n    loadProjectData() {\n      this.portfolioApiService.getProjects().subscribe(res => {\n        this.projectData = res.sort(this.portfolioComparisonService.projects);\n        if (this.profileData) {\n          this.setProjectControls(this.profileData.projects.map(p => p.id));\n        } else {\n          this.setProjectControls([]);\n        }\n        this.isLoaded = true;\n      });\n    }\n    setProjectControls(associatedProjectIds) {\n      this.projectData.forEach(p => {\n        const control = this.formBuilder.control(associatedProjectIds.includes(p.id));\n        this.profileForm.controls.projects.push(control);\n      });\n    }\n    loadStatusData() {\n      this.portfolioApiService.getProfileStatuses().subscribe(res => {\n        this.statusData = res;\n      });\n    }\n    loadTechnologyData() {\n      if (this.profileData) this.technologyData = this.profileData.technologies.sort(this.portfolioComparisonService.profileTechnologies);\n    }\n    buildProfileForm() {\n      if (this.profileData) {\n        this.profileForm = this.formBuilder.group({\n          name: this.formBuilder.control(this.profileData.name, [Validators.required, Validators.maxLength(50)]),\n          status: this.formBuilder.control(this.profileData.status.status, [Validators.required]),\n          projects: this.formBuilder.array(this.projectData, [this.validationService.hasMinElements(1)]),\n          tagline: this.formBuilder.control(this.profileData.tagline, [Validators.required]),\n          landing: this.formBuilder.control(this.profileData.landing, [Validators.required]),\n          about: this.formBuilder.control(this.profileData.about, [Validators.required]),\n          technologies: this.formBuilder.array(this.technologyData.map(t => t.name), [Validators.required]),\n          image_url: this.formBuilder.control(this.profileData.image_url, [Validators.required])\n        });\n      } else {\n        this.profileForm = this.formBuilder.group({\n          name: this.formBuilder.control('', [Validators.required, Validators.maxLength(50)]),\n          status: this.formBuilder.control('ACTIVE', [Validators.required]),\n          projects: this.formBuilder.array([], [this.validationService.hasMinElements(1)]),\n          tagline: this.formBuilder.control('', [Validators.required]),\n          landing: this.formBuilder.control('', [Validators.required]),\n          about: this.formBuilder.control('', [Validators.required]),\n          technologies: this.formBuilder.array([''], [Validators.required]),\n          image_url: this.formBuilder.control('', [Validators.required])\n        });\n      }\n    }\n    onSubmit() {\n      this.isSubmittingForm = true;\n      const profile = this.buildFormProfileData();\n      if (profile.status.status === 'ACTIVE') this.portfolioProfileService.setActiveProfile(profile);\n      if (profile.id === undefined) {\n        this.portfolioApiService.createProfile(profile).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification('Successfully created new profile!');\n          this.router.navigate(['admin']);\n        });\n      } else {\n        this.portfolioApiService.updateProfile(profile).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification('Successfully updated existing profile!');\n          this.router.navigate(['admin']);\n        });\n      }\n    }\n    buildFormProfileData() {\n      const projects = this.buildFormProjectData();\n      const status = this.buildFormStatusData();\n      const technologies = this.buildFormTechnologyData();\n      return new PortfolioProfile({\n        ...this.profileForm.value,\n        id: this.profileData ? this.profileData.id : undefined,\n        projects: projects,\n        status: status,\n        technologies: technologies\n      });\n    }\n    buildFormProjectData() {\n      return this.profileForm.value.projects.map((p, idx) => {\n        if (p) return this.projectData[idx];\n      }).filter(p => p !== undefined);\n    }\n    buildFormStatusData() {\n      return this.statusData.find(s => s.status === this.profileForm.value.status);\n    }\n    buildFormTechnologyData() {\n      return this.profileForm.value.technologies.map((t, idx) => {\n        return new PortfolioProfileTechnology({\n          name: t,\n          display_order: idx + 1\n        });\n      });\n    }\n    addTechnologyToForm() {\n      const control = this.formBuilder.control('', [Validators.required]);\n      this.profileForm.controls.technologies.push(control);\n      // CAUTION: Angular will throw an ExpressionChangedAfterItWasCheckedException after adding new control (b/c array becomes invalid)\n      this.changeDetectionRef.detectChanges();\n    }\n    changeTechnologyDisplayOrder(oldIdx, newIdx) {\n      const technologyFormArray = this.profileForm.get('technologies');\n      const technologies = [...technologyFormArray.value];\n      [technologies[oldIdx], technologies[newIdx]] = [technologies[newIdx], technologies[oldIdx]];\n      technologyFormArray.setValue(technologies);\n    }\n    removeTechnology(idx) {\n      this.profileForm.controls.technologies.removeAt(idx);\n    }\n    static #_ = this.ɵfac = function PortfolioProfileEditorComponent_Factory(t) {\n      return new (t || PortfolioProfileEditorComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.NotificationService), i0.ɵɵdirectiveInject(i5.PortfolioApiService), i0.ɵɵdirectiveInject(i5.PortfolioComparisonService), i0.ɵɵdirectiveInject(i5.PortfolioEditorService), i0.ɵɵdirectiveInject(i5.PortfolioProfileService), i0.ɵɵdirectiveInject(i6.Title), i0.ɵɵdirectiveInject(i4.TrackingService), i0.ɵɵdirectiveInject(i4.ValidationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PortfolioProfileEditorComponent,\n      selectors: [[\"ui-portfolio-profile-editor\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"class\", \"section editor\", 4, \"ngIf\", \"ngIfElse\"], [1, \"section\", \"editor\"], [1, \"editor__header\"], [1, \"line-divider\"], [1, \"editor__form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-field\", \"editor__form-field\"], [1, \"form-field-label\", \"editor__form-field-label\"], [\"formControlName\", \"name\", \"required\", \"\", \"autofocus\", \"\"], [\"formControlName\", \"status\", \"name\", \"status\", \"required\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"form__checkbox-item\", \"formArrayName\", \"projects\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"formControlName\", \"tagline\", \"required\", \"\", \"autofocus\", \"\"], [\"formControlName\", \"landing\", \"required\", \"\", \"autofocus\", \"\"], [\"formControlName\", \"about\", \"required\", \"\", \"autofocus\", \"\"], [\"class\", \"editor__profile-btn-row\", \"formArrayName\", \"technologies\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"aria-label\", \"Add technology\", \"type\", \"button\", 1, \"btn\", \"editor__profile-btn--add\", \"btn--go\", 3, \"click\"], [\"formControlName\", \"image_url\", \"required\", \"\", \"autofocus\", \"\"], [\"aria-label\", \"Submit profile\", 1, \"btn\", \"editor__form-btn\", \"editor__form-btn--submit\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\"], [3, \"value\"], [\"formArrayName\", \"projects\", 1, \"form__checkbox-item\"], [3, \"formControlName\"], [\"formArrayName\", \"technologies\", 1, \"editor__profile-btn-row\"], [\"required\", \"\", \"autofocus\", \"\", 1, \"editor__profile-form-field\", 3, \"formControlName\"], [\"aria-label\", \"Move technology up\", \"class\", \"btn editor__profile-btn--edit\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-label\", \"Move technology down\", \"class\", \"btn editor__profile-btn--edit\", \"type\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"aria-label\", \"Delete technology\", \"type\", \"button\", 1, \"btn\", \"editor__profile-btn--warn\", \"btn--warn\", 3, \"click\", \"ngClass\", \"disabled\"], [\"aria-label\", \"Move technology up\", \"type\", \"button\", 1, \"btn\", \"editor__profile-btn--edit\", 3, \"click\"], [\"aria-label\", \"Move technology down\", \"type\", \"button\", 1, \"btn\", \"editor__profile-btn--edit\", 3, \"click\"], [1, \"btn-loader-container\"], [1, \"btn-loader\"]],\n      template: function PortfolioProfileEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, PortfolioProfileEditorComponent_div_0_Template, 61, 14, \"div\", 1)(1, PortfolioProfileEditorComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r9 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoaded)(\"ngIfElse\", loading_r9);\n        }\n      },\n      dependencies: [i7.NgClass, i7.NgForOf, i7.NgIf, i8.LoadingSpinnerComponent, i9.MatCheckbox, i10.MatRadioGroup, i10.MatRadioButton, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i2.FormArrayName],\n      encapsulation: 2\n    });\n  }\n  return PortfolioProfileEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}