{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { PortfolioProject } from '../../models';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ui/core/auth\";\nimport * as i2 from \"@ui/core/services\";\nimport * as i3 from \"../../services\";\nimport * as i4 from \"@angular/platform-browser\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/router\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"../../../../core/components/loading-spinner/loading-spinner.component\";\nimport * as i9 from \"@angular/material/checkbox\";\nconst _c0 = (a0, a1) => ({\n  \"btn-loading\": a0,\n  \"btn--inactive\": a1\n});\nfunction PortfolioProjectEditorComponent_div_0_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19)(1, \"mat-checkbox\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const idx_r3 = ctx.index;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"formControlName\", idx_r3);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r1.profileData[idx_r3].name);\n  }\n}\nfunction PortfolioProjectEditorComponent_div_0_ng_container_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelement(2, \"div\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PortfolioProjectEditorComponent_div_0_ng_container_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction PortfolioProjectEditorComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h1\", 3);\n    i0.ɵɵtext(2, \"Portfolio Project Editor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"form\", 5);\n    i0.ɵɵlistener(\"ngSubmit\", function PortfolioProjectEditorComponent_div_0_Template_form_ngSubmit_4_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.onSubmit());\n    });\n    i0.ɵɵelementStart(5, \"div\", 6)(6, \"label\", 7);\n    i0.ɵɵtext(7, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"br\")(9, \"br\")(10, \"input\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 6)(12, \"label\", 7);\n    i0.ɵɵtext(13, \"Profiles\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"br\")(15, \"br\");\n    i0.ɵɵtemplate(16, PortfolioProjectEditorComponent_div_0_div_16_Template, 4, 2, \"div\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 6)(18, \"label\", 7);\n    i0.ɵɵtext(19, \"Tagline\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(20, \"br\")(21, \"br\")(22, \"input\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(23, \"div\", 11)(24, \"label\", 7);\n    i0.ɵɵtext(25, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"br\")(27, \"br\")(28, \"textarea\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"div\", 6)(30, \"label\", 7);\n    i0.ɵɵtext(31, \"Image URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(32, \"br\")(33, \"br\")(34, \"input\", 13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(35, \"div\", 6)(36, \"label\", 7);\n    i0.ɵɵtext(37, \"Link\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(38, \"br\")(39, \"br\");\n    i0.ɵɵelementStart(40, \"label\", 14);\n    i0.ɵɵtext(41, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(42, \"br\")(43, \"br\")(44, \"input\", 15)(45, \"br\")(46, \"br\");\n    i0.ɵɵelementStart(47, \"label\", 14);\n    i0.ɵɵtext(48, \"URL\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(49, \"br\")(50, \"br\")(51, \"input\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(52, \"button\", 17);\n    i0.ɵɵtemplate(53, PortfolioProjectEditorComponent_div_0_ng_container_53_Template, 3, 0, \"ng-container\", 18)(54, PortfolioProjectEditorComponent_div_0_ng_container_54_Template, 2, 0, \"ng-container\", 18);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formGroup\", ctx_r1.projectForm);\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.projectForm.controls.profiles[\"controls\"])(\"ngForTrackBy\", ctx_r1.trackingService.objectById);\n    i0.ɵɵadvance(36);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(7, _c0, ctx_r1.isSubmittingForm, !ctx_r1.projectForm.valid))(\"disabled\", !ctx_r1.projectForm.valid);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isSubmittingForm);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isSubmittingForm);\n  }\n}\nfunction PortfolioProjectEditorComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ui-loading-spinner\");\n  }\n}\nexport let PortfolioProjectEditorComponent = /*#__PURE__*/(() => {\n  class PortfolioProjectEditorComponent {\n    constructor(authService, cdRef, notificationService, portfolioApiService, portfolioComparisonService, portfolioEditorService, seoService, titleService, trackingService, validationService, formBuilder, router) {\n      this.authService = authService;\n      this.cdRef = cdRef;\n      this.notificationService = notificationService;\n      this.portfolioApiService = portfolioApiService;\n      this.portfolioComparisonService = portfolioComparisonService;\n      this.portfolioEditorService = portfolioEditorService;\n      this.seoService = seoService;\n      this.titleService = titleService;\n      this.trackingService = trackingService;\n      this.validationService = validationService;\n      this.formBuilder = formBuilder;\n      this.router = router;\n      this.profileData = [];\n      this.isLoaded = false;\n      this.isSubmittingForm = false;\n    }\n    ngOnDestroy() {\n      this.portfolioEditorService.setProject(null);\n    }\n    ngOnInit() {\n      this.titleService.setTitle('Portfolio Project Editor | Matthew Maxwell');\n      this.checkForAdmin();\n      this.setPageHideEvent();\n      this.initProjectForm();\n    }\n    checkForAdmin() {\n      if (!this.authService.isLoggedIn()) this.router.navigate(['']);\n    }\n    setPageHideEvent() {\n      window.onpagehide = () => {\n        this.portfolioEditorService.setProject(null);\n      };\n    }\n    initProjectForm() {\n      this.loadProjectData();\n      this.loadProfileData();\n      this.buildProjectForm();\n    }\n    loadProjectData() {\n      this.projectData = this.portfolioEditorService.getProject();\n    }\n    loadProfileData() {\n      this.portfolioApiService.getProfiles().subscribe(res => {\n        this.profileData = res.sort(this.portfolioComparisonService.profiles);\n        if (this.projectData) {\n          this.setProfileControls(this.projectData.profiles.map(p => p.id));\n        } else {\n          this.setProfileControls([]);\n        }\n        this.isLoaded = true;\n      });\n    }\n    setProfileControls(associatedProfileIds) {\n      this.profileData.forEach(p => {\n        const control = this.formBuilder.control(associatedProfileIds.includes(p.id));\n        this.projectForm.controls.profiles.push(control);\n      });\n    }\n    buildProjectForm() {\n      if (this.projectData) {\n        this.projectForm = this.formBuilder.group({\n          name: this.formBuilder.control(this.projectData.name, [Validators.required, Validators.maxLength(50)]),\n          profiles: this.formBuilder.array(this.profileData, [this.validationService.hasMinElements()]),\n          tagline: this.formBuilder.control(this.projectData.tagline, [Validators.required]),\n          description: this.formBuilder.control(this.projectData.description, [Validators.required]),\n          image_url: this.formBuilder.control(this.projectData.image_url, [Validators.required]),\n          link_name: this.formBuilder.control(this.projectData.link_name, [Validators.required]),\n          link_url: this.formBuilder.control(this.projectData.link_url, [Validators.required])\n        });\n      } else {\n        this.projectForm = this.formBuilder.group({\n          name: this.formBuilder.control('', [Validators.required, Validators.maxLength(50)]),\n          profiles: this.formBuilder.array([], [this.validationService.hasMinElements()]),\n          tagline: this.formBuilder.control('', [Validators.required]),\n          description: this.formBuilder.control('', [Validators.required]),\n          image_url: this.formBuilder.control('', [Validators.required]),\n          link_name: this.formBuilder.control('', [Validators.required]),\n          link_url: this.formBuilder.control('', [Validators.required])\n        });\n      }\n    }\n    onSubmit() {\n      this.isSubmittingForm = true;\n      const project = this.buildFormProjectData();\n      if (project.id === undefined) {\n        this.portfolioApiService.createProject(project).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification(`Successfully created new portfolio project!`);\n          this.router.navigate([`projects/${this.seoService.getCanonicalUrl(res.id, res.name)}`]);\n        });\n      } else {\n        this.portfolioApiService.updateProject(project).subscribe(res => {\n          this.isSubmittingForm = false;\n          this.notificationService.createNotification(`Successfully updated existing portfolio project!`);\n          this.router.navigate([`projects/${this.seoService.getCanonicalUrl(res.id, res.name)}`]);\n        });\n      }\n    }\n    buildFormProjectData() {\n      const profiles = this.buildFormProfileData();\n      return new PortfolioProject({\n        ...this.projectForm.value,\n        id: this.projectData ? this.projectData.id : undefined,\n        profiles: profiles\n      });\n    }\n    buildFormProfileData() {\n      return this.projectForm.value.profiles.map((p, idx) => {\n        if (p) return this.profileData[idx];\n      }).filter(p => p !== undefined);\n    }\n    static #_ = this.ɵfac = function PortfolioProjectEditorComponent_Factory(t) {\n      return new (t || PortfolioProjectEditorComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i2.NotificationService), i0.ɵɵdirectiveInject(i3.PortfolioApiService), i0.ɵɵdirectiveInject(i3.PortfolioComparisonService), i0.ɵɵdirectiveInject(i3.PortfolioEditorService), i0.ɵɵdirectiveInject(i2.SeoService), i0.ɵɵdirectiveInject(i4.Title), i0.ɵɵdirectiveInject(i2.TrackingService), i0.ɵɵdirectiveInject(i2.ValidationService), i0.ɵɵdirectiveInject(i5.FormBuilder), i0.ɵɵdirectiveInject(i6.Router));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PortfolioProjectEditorComponent,\n      selectors: [[\"ui-portfolio-project-editor\"]],\n      decls: 3,\n      vars: 2,\n      consts: [[\"loading\", \"\"], [\"class\", \"section editor\", 4, \"ngIf\", \"ngIfElse\"], [1, \"section\", \"editor\"], [1, \"editor__header\"], [1, \"line-divider\"], [1, \"editor__form\", 3, \"ngSubmit\", \"formGroup\"], [1, \"form-field\", \"editor__form-field\"], [1, \"form-field-label\", \"editor__form-field-label\"], [\"formControlName\", \"name\", \"required\", \"\", \"autofocus\", \"\"], [\"class\", \"form__checkbox-item\", \"formArrayName\", \"profiles\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"formControlName\", \"tagline\", \"required\", \"\"], [1, \"form-field\", \"form-field--large\", \"editor__form-field\"], [\"formControlName\", \"description\", \"required\", \"\"], [\"formControlName\", \"image_url\", \"required\", \"\"], [1, \"form-field-label--small\", \"editor__form-field-label--small\"], [\"formControlName\", \"link_name\", \"required\", \"\"], [\"formControlName\", \"link_url\", \"required\", \"\"], [\"aria-label\", \"Submit project\", 1, \"btn\", \"editor__form-btn\", \"editor__form-btn--submit\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\"], [\"formArrayName\", \"profiles\", 1, \"form__checkbox-item\"], [3, \"formControlName\"], [1, \"btn-loader-container\"], [1, \"btn-loader\"]],\n      template: function PortfolioProjectEditorComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵtemplate(0, PortfolioProjectEditorComponent_div_0_Template, 55, 10, \"div\", 1)(1, PortfolioProjectEditorComponent_ng_template_1_Template, 1, 0, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        }\n        if (rf & 2) {\n          const loading_r4 = i0.ɵɵreference(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoaded)(\"ngIfElse\", loading_r4);\n        }\n      },\n      dependencies: [i7.NgClass, i7.NgForOf, i7.NgIf, i8.LoadingSpinnerComponent, i9.MatCheckbox, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.FormGroupDirective, i5.FormControlName, i5.FormArrayName],\n      encapsulation: 2\n    });\n  }\n  return PortfolioProjectEditorComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}