{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { from } from 'rxjs';\nimport { map, mergeMap } from 'rxjs/operators';\nimport { loadStripe } from '@stripe/stripe-js/pure';\nimport { environment } from '@ui/environments/environment';\nimport { ApiService } from '@ui/core/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ShopCheckoutService = /*#__PURE__*/(() => {\n  class ShopCheckoutService extends ApiService {\n    constructor(http) {\n      super(http);\n      this.stripe$ = from(loadStripe(environment.STRIPE_PK));\n    }\n    goToCheckout(productId) {\n      return this.getSession(productId).pipe(mergeMap(sessionId => this.redirectToCheckout(sessionId)));\n    }\n    getSession(productId) {\n      let params = new HttpParams();\n      params = params.set('productId', productId);\n      return this.http.get(`${environment.API_URL}/shop/checkout/init`, {\n        params: params\n      }).pipe(map(res => res.id));\n    }\n    redirectToCheckout(sessionId) {\n      return this.stripe$.pipe(mergeMap(stripe => stripe.redirectToCheckout({\n        sessionId\n      })));\n    }\n    completeCheckout(productId, sessionId) {\n      let params = new HttpParams();\n      params = params.set('productId', productId);\n      params = params.set('sessionId', sessionId);\n      console.log(params);\n      return this.http.post(`${environment.API_URL}/shop/checkout/complete`, {}, {\n        params: params\n      });\n    }\n    completeFreeCheckout(productId, customerEmail) {\n      let params = new HttpParams();\n      params = params.set('productId', productId);\n      params = params.set('isFreeProduct', 'true');\n      return this.http.post(`${environment.API_URL}/shop/checkout/complete`, {\n        email: customerEmail\n      }, {\n        params: params\n      });\n    }\n    getCustomer() {\n      return this.customer;\n    }\n    setCustomer(customerData) {\n      this.customer = customerData;\n    }\n    static #_ = this.ɵfac = function ShopCheckoutService_Factory(t) {\n      return new (t || ShopCheckoutService)(i0.ɵɵinject(i1.HttpClient));\n    };\n    static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ShopCheckoutService,\n      factory: ShopCheckoutService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return ShopCheckoutService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}