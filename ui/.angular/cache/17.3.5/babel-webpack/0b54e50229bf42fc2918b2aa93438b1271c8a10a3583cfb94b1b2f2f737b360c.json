{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HTTP_INTERCEPTORS, HttpClient, HttpClientModule } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { AuthInterceptor, AuthService } from '@ui/core/auth';\nimport { HttpErrorInterceptor } from '@ui/core/http/http-error.interceptor';\nimport { HttpRequestInterceptor } from '@ui/core/http/http-request.interceptor';\nimport { NotificationService } from '@ui/core/services';\nimport { MarkdownModule, MarkedOptions, MarkedRenderer } from 'ngx-markdown';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { environment } from '@ui/environments/environment';\nimport { CoreModule } from '@ui/core/core.module';\nimport { MaterialModule } from '@ui/modules/material/material.module';\nexport function markedOptionsFactory() {\n  const renderer = new MarkedRenderer();\n  const linkRenderer = renderer.link;\n  renderer.link = (href, title, text) => {\n    const html = linkRenderer.call(renderer, href, title, text);\n    const isAppUrl = href.includes(environment.BASE_URL);\n    const replacement = isAppUrl ? '<a role=\"link\" ' : '<a role=\"link\" target=\"_blank\" rel=\"nofollow noopener noreferrer\" ';\n    let result = html.replace(/^<a /, replacement);\n    return result;\n  };\n  const listitemRenderer = renderer.listitem;\n  renderer.listitem = text => {\n    const html = listitemRenderer.call(renderer, text);\n    let result = html.replace(/^<li><p>/, '<li>');\n    result = result.replace(/<\\/p><\\/li>$/, '</li>');\n    return result;\n  };\n  return {\n    renderer,\n    gfm: true,\n    breaks: false,\n    pedantic: false,\n    smartLists: true,\n    smartypants: false\n  };\n}\nlet AppModule = class AppModule {};\nAppModule = __decorate([NgModule({\n  declarations: [AppComponent],\n  imports: [AppRoutingModule, BrowserAnimationsModule, BrowserModule, CoreModule, FormsModule, HttpClientModule, MarkdownModule.forRoot({\n    loader: HttpClient,\n    markedOptions: {\n      provide: MarkedOptions,\n      useFactory: markedOptionsFactory\n    }\n  }), MaterialModule, ReactiveFormsModule, ServiceWorkerModule.register('ngsw-worker.js', {\n    enabled: environment.production,\n    registrationStrategy: 'registerImmediately'\n  })],\n  providers: [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: HttpRequestInterceptor,\n    multi: true\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useFactory: function (notificationService) {\n      return new HttpErrorInterceptor(notificationService);\n    },\n    multi: true,\n    deps: [NotificationService]\n  }, {\n    provide: HTTP_INTERCEPTORS,\n    useFactory: function (router, authService, notificationService) {\n      return new AuthInterceptor(router, authService, notificationService);\n    },\n    multi: true,\n    deps: [Router, AuthService, NotificationService]\n  }],\n  bootstrap: [AppComponent]\n})], AppModule);\nexport { AppModule };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}