{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@ui/core/auth\";\nimport * as i3 from \"@ui/core/services\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nconst _c0 = (a0, a1) => ({\n  \"btn-loading\": a0,\n  \"btn--inactive\": a1\n});\nfunction LoginViewComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelement(2, \"div\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction LoginViewComponent_ng_container_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Submit \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let LoginViewComponent = /*#__PURE__*/(() => {\n  class LoginViewComponent {\n    constructor(router, authApiService, authService, notificationService, validationService) {\n      this.router = router;\n      this.authApiService = authApiService;\n      this.authService = authService;\n      this.notificationService = notificationService;\n      this.validationService = validationService;\n      this.username = '';\n      this.password = '';\n      this.isLoggingIn = false;\n    }\n    ngOnInit() {\n      if (this.authService.isLoggedIn()) {\n        this.notificationService.createNotification('Already logged in.');\n        this.router.navigate(['admin']);\n      }\n    }\n    onLoginSubmit() {\n      this.isLoggingIn = true;\n      const admin = {\n        username: this.username,\n        password: this.password\n      };\n      this.authApiService.loginAdmin(admin).subscribe(res => {\n        this.authService.loginAdmin(res.id, res.username);\n        this.isLoggingIn = false;\n        this.notificationService.createNotification(`Welcome back, ${res.username}!`);\n        this.router.navigate(['admin']);\n      }, error => {\n        this.notificationService.createNotification(error.error.message);\n        this.isLoggingIn = false;\n      });\n    }\n    static #_ = this.ɵfac = function LoginViewComponent_Factory(t) {\n      return new (t || LoginViewComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthApiService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i3.ValidationService));\n    };\n    static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginViewComponent,\n      selectors: [[\"ui-login-view\"]],\n      decls: 22,\n      vars: 9,\n      consts: [[1, \"section\", \"login\"], [1, \"login__header\"], [1, \"line-divider\"], [1, \"login__form\", 3, \"ngSubmit\"], [1, \"form-field\", \"login__form-field\"], [\"name\", \"username\", \"required\", \"\", \"autofocus\", \"\", 3, \"ngModelChange\", \"ngModel\"], [1, \"form-field\", \"form-field--password\", \"login__form-field\"], [\"name\", \"password\", \"type\", \"password\", \"required\", \"\", 3, \"ngModelChange\", \"ngModel\"], [\"aria-label\", \"Login submit\", 1, \"btn\", \"login__form-btn\", 3, \"ngClass\", \"disabled\"], [4, \"ngIf\"], [1, \"btn-loader-container\"], [1, \"btn-loader\"]],\n      template: function LoginViewComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\", 1);\n          i0.ɵɵtext(2, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(3, \"div\", 2);\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginViewComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.onLoginSubmit();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"label\");\n          i0.ɵɵtext(7, \"Username\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"br\")(9, \"br\");\n          i0.ɵɵelementStart(10, \"input\", 5);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginViewComponent_Template_input_ngModelChange_10_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.username, $event) || (ctx.username = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(11, \"br\");\n          i0.ɵɵelementStart(12, \"div\", 6)(13, \"label\");\n          i0.ɵɵtext(14, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"br\")(16, \"br\");\n          i0.ɵɵelementStart(17, \"input\", 7);\n          i0.ɵɵtwoWayListener(\"ngModelChange\", function LoginViewComponent_Template_input_ngModelChange_17_listener($event) {\n            i0.ɵɵtwoWayBindingSet(ctx.password, $event) || (ctx.password = $event);\n            return $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelement(18, \"br\");\n          i0.ɵɵelementStart(19, \"button\", 8);\n          i0.ɵɵtemplate(20, LoginViewComponent_ng_container_20_Template, 3, 0, \"ng-container\", 9)(21, LoginViewComponent_ng_container_21_Template, 2, 0, \"ng-container\", 9);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(10);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.username);\n          i0.ɵɵadvance(7);\n          i0.ɵɵtwoWayProperty(\"ngModel\", ctx.password);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(6, _c0, ctx.isLoggingIn, !ctx.validationService.hasValidAdminCredentials(ctx.username, ctx.password)))(\"disabled\", !ctx.validationService.hasValidAdminCredentials(ctx.username, ctx.password));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.isLoggingIn);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.isLoggingIn);\n        }\n      },\n      dependencies: [i4.NgClass, i4.NgIf, i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.RequiredValidator, i5.NgModel, i5.NgForm],\n      styles: [\".login[_ngcontent-%COMP%]{min-height:65vh}.login__header[_ngcontent-%COMP%]{text-align:center;margin-bottom:2rem}.login__form[_ngcontent-%COMP%]{text-align:center}.login__form-btn[_ngcontent-%COMP%]{line-height:48px;margin-top:1rem;width:180px}@media only screen and (min-width: 768px){  .section-divider{height:14vh!important}}\"]\n    });\n  }\n  return LoginViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}