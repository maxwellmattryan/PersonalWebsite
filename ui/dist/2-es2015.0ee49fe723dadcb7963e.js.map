{"version":3,"sources":["webpack:///src/app/modules/portfolio/models/portfolio-profile-status.model.ts","webpack:///src/app/modules/portfolio/models/portfolio-profile-technology.model.ts","webpack:///src/app/modules/portfolio/models/portfolio-project.model.ts","webpack:///src/app/modules/portfolio/models/portfolio-profile.model.ts","webpack:///src/app/modules/portfolio/components/portfolio-project-collection/portfolio-project-collection.component.html","webpack:///src/app/modules/portfolio/components/portfolio-project-collection/portfolio-project-collection.component.ts","webpack:///src/app/core/components/icon/icon.component.html","webpack:///src/app/core/components/icon/icon.component.ts","webpack:///src/app/modules/portfolio/portfolio.component.ts","webpack:///src/app/modules/portfolio/portfolio.component.html","webpack:///src/app/modules/portfolio/components/portfolio-profile-editor/portfolio-profile-editor.component.html","webpack:///src/app/modules/portfolio/components/portfolio-profile-editor/portfolio-profile-editor.component.ts","webpack:///src/app/modules/portfolio/components/portfolio-project-editor/portfolio-project-editor.component.html","webpack:///src/app/modules/portfolio/components/portfolio-project-editor/portfolio-project-editor.component.ts","webpack:///src/app/modules/portfolio/components/portfolio-project-view/portfolio-project-view.component.html","webpack:///src/app/modules/portfolio/portfolio-routing.module.ts","webpack:///src/app/modules/portfolio/components/portfolio-project-view/portfolio-project-view.component.ts","webpack:///src/app/modules/portfolio/portfolio.module.ts"],"names":["PortfolioProfileStatus","partial","Object","assign","this","input","PortfolioProfileTechnology","profiles","map","p","deserialize","status","s","technologies","t","projects","PortfolioProjectCollectionComponent","authService","seoService","trackingService","id","name","getCanonicalUrl","IconComponent","PortfolioComponent","PortfolioProfileEditorComponent","router","changeDetectionRef","formBuilder","notificationService","portfolioApiService","portfolioComparisonService","portfolioEditorService","portfolioProfileService","titleService","validationService","projectData","statusData","technologyData","isLoaded","setProfile","setTitle","checkForAdmin","setPageHideEvent","initProfileForm","isLoggedIn","navigate","window","onpagehide","loadProfileData","loadProjectData","loadStatusData","loadTechnologyData","buildProfileForm","profileData","getProfile","console","log","getProjects","subscribe","res","sort","setProjectControls","associatedProjectIds","forEach","control","includes","profileForm","controls","push","getProfileStatuses","profileTechnologies","group","required","array","hasMinElements","tagline","landing","about","image_url","profile","buildFormProfileData","setActiveProfile","undefined","createProfile","createNotification","updateProfile","buildFormProjectData","buildFormStatusData","buildFormTechnologyData","value","idx","filter","find","display_order","detectChanges","oldIdx","newIdx","technologyFormArray","get","setValue","removeAt","PortfolioProjectEditorComponent","cdRef","setProject","initProjectForm","buildProjectForm","getProject","getProfiles","setProfileControls","associatedProfileIds","projectForm","description","link_name","link_url","project","createProject","updateProject","routes","path","component","children","PortfolioProjectViewComponent","portfolioProjectApiService","portfolioProjectEditorService","isAdmin","projectId","getIdFromUrl","url","error","message","deleteProject","PortfolioRoutingModule","forChild","PortfolioModule","forRoot"],"mappings":"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","file":"x","sourcesContent":["import { Deserializable } from '@ui/core/models/deserializable.model';\r\n\r\nexport class PortfolioProfileStatus implements Deserializable {\r\n    constructor(partial: Partial<PortfolioProfileStatus>) {\r\n        Object.assign(this, partial);\r\n    }\r\n\r\n    deserialize(input: any): this {\r\n        Object.assign(this, input);\r\n        return this;\r\n    }\r\n\r\n    id?: number;\r\n\r\n    status: string;\r\n}\r\n","import { Deserializable } from '@ui/core/models/deserializable.model';\r\n\r\nexport class PortfolioProfileTechnology implements Deserializable {\r\n    constructor(partial: Partial<PortfolioProfileTechnology>) {\r\n        Object.assign(this, partial);\r\n    }\r\n\r\n    deserialize(input: any): this {\r\n        Object.assign(this, input);\r\n        return this;\r\n    }\r\n\r\n    id?: number;\r\n\r\n    name: string;\r\n    display_order: number;\r\n}","import { Deserializable } from '@ui/core/models/deserializable.model';\r\n\r\nimport { PortfolioProfile } from './portfolio-profile.model';\r\n\r\nexport class PortfolioProject implements Deserializable {\r\n    constructor(partial: Partial<PortfolioProject>) {\r\n        Object.assign(this, partial);\r\n    }\r\n\r\n    deserialize(input: any): this {\r\n        Object.assign(this, input);\r\n\r\n        this.profiles = input.profiles.map(p => new PortfolioProfile({ ...p }).deserialize(p));\r\n\r\n        return this;\r\n    }\r\n\r\n    id?:            number;\r\n\r\n    profiles:       PortfolioProfile[];\r\n\r\n    name:           string;\r\n    tagline:        string;\r\n    description:    string;\r\n\r\n    image_url:      string;\r\n\r\n    link_name:      string;\r\n    link_url:       string;\r\n\r\n    created_at:     Date;\r\n    updated_at:     Date;\r\n}\r\n","import { Deserializable } from '@ui/core/models/deserializable.model';\r\n\r\nimport { PortfolioProfileStatus } from './portfolio-profile-status.model';\r\nimport { PortfolioProfileTechnology } from './portfolio-profile-technology.model';\r\nimport { PortfolioProject } from './portfolio-project.model';\r\n\r\nexport class PortfolioProfile implements Deserializable {\r\n    constructor(partial: Partial<PortfolioProfile>) {\r\n        Object.assign(this, partial);\r\n    }\r\n\r\n    deserialize(input: any): this {\r\n        Object.assign(this, input);\r\n\r\n        this.status = input.status.map(s => new PortfolioProfileStatus({ ...s }).deserialize(s));\r\n        this.technologies = input.technologies.map(t => new PortfolioProfileTechnology({ ...t }).deserialize(t));\r\n        this.projects = input.projects.map(p => new PortfolioProject({ ...p }).deserialize(p));\r\n\r\n        return this;\r\n    }\r\n\r\n    id?:             number;\r\n\r\n    status:         PortfolioProfileStatus;\r\n    technologies:   PortfolioProfileTechnology[];\r\n    projects:       PortfolioProject[];\r\n\r\n    name:           string;\r\n    tagline:        string;\r\n    landing:        string;\r\n    about:          string;\r\n    image_url:      string;\r\n\r\n    created_at:      Date;\r\n    updated_at:      Date;\r\n}\r\n","<div class='section projects'>\r\n    <h2 class='projects__header'>Projects</h2>\r\n\r\n    <div class='projects__line-divider line-divider'></div>\r\n\r\n    <div class='container projects__project-container'>\r\n        <div class='projects__project' *ngFor='let project of projects trackBy: this.trackingService.objectById; let idx = index' [ngClass]=\"{'projects__project--rjust': idx % 2 === 0}\">\r\n            <div class='projects__project-background' [ngStyle]=\"{ 'background-image': 'url(' + project.image_url.substring(0, project.image_url.length - 4) + 'png)' }\"></div>\r\n\r\n            <a class='projects__project-anchor-wrapper' [routerLink]=\"[this.getProjectUrl(project.id, project.name)]\">\r\n                <h3 class='projects__project-name projects__project-name--link'>{{ project.name }}</h3>\r\n            </a>\r\n\r\n            <h4 class='projects__project-tagline'>{{ project.tagline }}</h4>\r\n            <markdown [data]='project.description.split(\" \").slice(0, 36).join(\" \")' class='projects__project-description'></markdown>\r\n\r\n            <a aria-label=\"Link to project's external URL\" class='projects__project-link' [href]='project.link_url' target='_blank' rel='noopener noreferrer'>\r\n                <app-icon class= 'projects__project-link-icon' [name]='project.link_name'></app-icon>\r\n            </a>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { AuthService } from '@ui/core/auth';\r\nimport { SeoService, TrackingService } from '@ui/core/services';\r\n\r\nimport { PortfolioProject } from '../../models';\r\n\r\n@Component({\r\n    selector: 'app-portfolio-project-collection',\r\n    templateUrl: './portfolio-project-collection.component.html',\r\n    styleUrls: ['./portfolio-project-collection.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class PortfolioProjectCollectionComponent implements OnInit {\r\n    @Input() projects: PortfolioProject[];\r\n\r\n    constructor(\r\n        public authService: AuthService,\r\n        private seoService: SeoService,\r\n        public trackingService: TrackingService\r\n    ) { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    getProjectUrl(id: number, name: string): string {\r\n        return `portfolio/projects/${this.seoService.getCanonicalUrl(id, name)}`;\r\n    }\r\n}\r\n","<ng-container *ngIf='name === \"Google Drive\"'>\r\n    <svg class='svg-icon drive-svg-icon' version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\"\r\n         viewBox=\"0 0 550.801 550.801\" style=\"enable-background:new 0 0 550.801 550.801;\"\r\n         xml:space=\"preserve\">\r\n        <title>Google Drive</title>\r\n        <path d=\"M538.051,339.15L362.1,33.15H188.7l0,0l175.951,306H538.051z M216.75,364.65l-86.7,153H464.1l86.701-153H216.75z\r\n                M165.75,71.4L0,364.65l86.7,153L255,224.4L165.75,71.4z\"/>\r\n    </svg>\r\n</ng-container>\r\n\r\n<ng-container *ngIf='name === \"Green Foot\"'>\r\n    <svg class='svg-icon foot-svg-icon' version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" viewBox=\"0 0 512 512\">\r\n        <title>Green Foot</title>\r\n        <path d=\"M158.31 194.212c-8.284-122.46 182.466-34.243 171.417 23.982-10.67 56.167-45.691 65.905-69.97 100.004 0 0-16.916 50.197-11.151 70.236 18.964 66.058-78.541 125.798-103.926 48.558 0 0-12.196-52.439 36.126-88.299 19.169-24.494-15.657-53.433-22.498-154.481z\" />\r\n        <path d=\"M211.425 73.954c3.031 21.617-7.332 40.98-23.142 43.223-15.79 2.181-31.078-13.537-34.099-35.205-3.042-21.657 7.311-40.96 23.101-43.182 15.841-2.233 31.119 13.486 34.14 35.164z\" />\r\n        <path d=\"M270.807 95.632c-2.755 13.742-13.752 23.081-24.586 20.941-10.864-2.181-17.398-15.022-14.663-28.784 2.734-13.763 13.752-23.102 24.596-20.941 10.844 2.212 17.387 15.073 14.654 28.785z\" />\r\n        <path d=\"M315.024 120.873c-4.199 11.203-14.776 17.644-23.634 14.295-8.817-3.318-12.606-15.043-8.407-26.276 4.199-11.203 14.756-17.603 23.603-14.285 8.827 3.349 12.606 15.084 8.438 26.266z\" />\r\n        <path d=\"M348.938 155.453c-5.56 9.022-15.841 12.78-22.958 8.376-7.096-4.382-8.366-15.216-2.796-24.258 5.55-9.063 15.831-12.779 22.938-8.376 7.106 4.423 8.397 15.237 2.816 24.258z\" />\r\n        <path d=\"M366.745 191.959c-3.512 6.584-10.578 9.656-15.78 6.881-5.212-2.765-6.564-10.363-3.051-16.937 3.502-6.584 10.567-9.677 15.769-6.922 5.202 2.816 6.564 10.373 3.062 16.978z\" />\r\n    </svg>\r\n</ng-container>\r\n\r\n<ng-container *ngIf='name === \"GitHub\"'>\r\n    <svg class='svg-icon github-svg-icon' role=\"img\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <title>GitHub</title>\r\n        <path d=\"M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12\"/>\r\n    </svg>\r\n</ng-container>\r\n\r\n<ng-container *ngIf='name === \"Itch.io\"'>\r\n    <svg class='svg-icon itch-svg-icon' role=\"img\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n        <title>Itch.io</title>\r\n        <path d=\"M3.129 1.338c-1.047 0.622-3.109 2.991-3.129 3.612v1.029c0 1.304 1.219 2.45 2.325 2.45 1.329 0 2.436-1.101 2.436-2.408 0 1.307 1.069 2.408 2.398 2.408s2.364-1.101 2.364-2.408c0 1.307 1.137 2.408 2.466 2.408h0.024c1.329 0 2.466-1.101 2.466-2.408 0 1.307 1.035 2.408 2.364 2.408s2.398-1.101 2.398-2.408c0 1.307 1.107 2.408 2.436 2.408 1.107 0 2.325-1.146 2.325-2.45v-1.029c-0.020-0.621-2.082-2.991-3.129-3.612-3.254-0.114-5.51-0.134-8.871-0.133s-7.945 0.053-8.871 0.133zM9.506 7.815c-0.133 0.23-0.288 0.428-0.467 0.601l-0.001 0.001c-0.502 0.49-1.189 0.794-1.947 0.794-0.001 0-0.002 0-0.003 0-0.759 0-1.447-0.303-1.949-0.795l0 0c-0.182-0.178-0.32-0.368-0.446-0.59l-0.001 0c-0.126 0.222-0.302 0.412-0.485 0.59-0.502 0.491-1.19 0.794-1.949 0.794-0.001 0-0.002 0-0.003 0h0c-0.091 0-0.186-0.025-0.263-0.052-0.107 1.112-0.152 2.175-0.168 2.95l-0 0.004c-0.002 0.394-0.004 0.717-0.006 1.167 0.021 2.334-0.231 7.564 1.029 8.849 1.953 0.455 5.546 0.663 9.151 0.664h0.001c3.605-0.001 7.198-0.209 9.151-0.664 1.26-1.285 1.008-6.516 1.029-8.849-0.002-0.45-0.004-0.773-0.006-1.167l-0-0.004c-0.016-0.775-0.061-1.838-0.168-2.95-0.077 0.026-0.172 0.052-0.263 0.052-0.001 0-0.002 0-0.002 0-0.759 0-1.447-0.303-1.949-0.795l0.001 0c-0.182-0.178-0.358-0.368-0.485-0.59l-0.001-0c-0.127 0.222-0.265 0.412-0.446 0.59-0.502 0.491-1.19 0.795-1.948 0.795-0.001 0-0.002 0-0.003 0h0c-0.758 0-1.445-0.304-1.947-0.795-0.179-0.174-0.334-0.372-0.461-0.589l-0.007-0.013c-0.132 0.23-0.286 0.428-0.463 0.602l-0 0c-0.502 0.491-1.19 0.795-1.949 0.795-0.001 0-0.002 0-0.003 0h0c-0.026 0-0.053-0.001-0.079-0.002h-0.001c-0.026 0.001-0.053 0.002-0.080 0.002-0.001 0-0.002 0-0.003 0-0.759 0-1.447-0.303-1.949-0.795l0.001 0c-0.178-0.174-0.331-0.372-0.456-0.589l-0.007-0.013zM7.502 10.406l-0 0.001h0.001c0.794 0.002 1.498 0 2.372 0.953 0.687-0.072 1.406-0.108 2.125-0.107h0.001c0.719-0.001 1.437 0.035 2.125 0.107 0.873-0.953 1.578-0.952 2.372-0.953h0.001l-0-0.001c0.375 0 1.875 0 2.92 2.935l1.122 4.026c0.832 2.995-0.266 3.069-1.636 3.071-2.031-0.076-3.156-1.551-3.156-3.026-1.124 0.184-2.436 0.276-3.748 0.276h-0.001c-1.312 0-2.624-0.092-3.748-0.276 0 1.475-1.125 2.95-3.156 3.026-1.37-0.003-2.468-0.076-1.636-3.071l1.123-4.026c1.045-2.935 2.545-2.935 2.92-2.935zM12 12.713v0.001c-0.002 0.002-2.138 1.964-2.523 2.662l1.399-0.056v1.22c0 0.057 0.561 0.034 1.123 0.008h0.001c0.562 0.026 1.123 0.049 1.123-0.008v-1.22l1.399 0.056c-0.384-0.698-2.523-2.662-2.523-2.662v-0.001l-0 0z\"/>\r\n    </svg>\r\n</ng-container>","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-icon',\r\n    templateUrl: './icon.component.html',\r\n    styleUrls: ['./icon.component.scss']\r\n})\r\nexport class IconComponent implements OnInit {\r\n    @Input() name: string;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'app-portfolio',\r\n    templateUrl: './portfolio.component.html'\r\n})\r\nexport class PortfolioComponent implements OnInit {\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n}","<router-outlet></router-outlet>","<div class='section editor' *ngIf='isLoaded; else loading'>\r\n    <h1 class='editor__header'>Profile Editor</h1>\r\n\r\n    <div class='line-divider'></div>\r\n\r\n    <form class='editor__form' [formGroup]='profileForm' (ngSubmit)='onSubmit()'>\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Name</label>\r\n            <br><br>\r\n            <input formControlName='name' required autofocus>\r\n        </div>\r\n\r\n        <div class=\"form-field editor__form-field\">\r\n            <label class='form-field-label editor__form-field-label'>Status</label>\r\n            <br><br>\r\n            <mat-radio-group formControlName='status' name='status' required>\r\n                <mat-radio-button\r\n                        *ngFor='let status of statusData trackBy: this.trackingService.objectById'\r\n                        [value]='status.status'\r\n                >{{ status.status }}</mat-radio-button>\r\n            </mat-radio-group>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Projects</label>\r\n            <br><br>\r\n            <div class='form__checkbox-item' formArrayName='projects' *ngFor='let project of profileForm.controls.projects[\"controls\"] trackBy: this.trackingService.objectById; let idx = index'>\r\n                <mat-checkbox [formControlName]='idx'>{{ projectData[idx].name }}</mat-checkbox>\r\n                <br>\r\n            </div>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Tagline</label>\r\n            <br><br>\r\n            <input formControlName='tagline' required autofocus>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Landing</label>\r\n            <br><br>\r\n            <input formControlName='landing' required autofocus>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>About</label>\r\n            <br><br>\r\n            <input formControlName='about' required autofocus>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Technologies</label>\r\n            <br><br>\r\n            <div class='editor__profile-btn-row' formArrayName='technologies' *ngFor='let technology of profileForm.controls.technologies[\"controls\"] trackBy: this.trackingService.objectById; let idx = index'>\r\n                <input class='editor__profile-form-field' [formControlName]='idx' required autofocus>\r\n\r\n                <button\r\n                    aria-label='Move technology up'\r\n                    *ngIf='idx !== 0'\r\n                    class='btn editor__profile-btn--edit'\r\n                    (click)='changeTechnologyDisplayOrder(idx, idx - 1)'\r\n                    type='button'\r\n                >&#9650;</button>\r\n                <button\r\n                    aria-label='Move technology down'\r\n                    *ngIf='idx !== profileForm.controls.technologies[\"controls\"].length - 1'\r\n                    class='btn editor__profile-btn--edit'\r\n                    (click)='changeTechnologyDisplayOrder(idx, idx + 1)'\r\n                    type='button'\r\n                >&#9660;</button>\r\n                <button\r\n                    aria-label='Delete technology'\r\n                    [ngClass]=\"{'btn--inactive': profileForm.controls.technologies['controls'].length === 1}\"\r\n                    [disabled]='profileForm.controls.technologies[\"controls\"].length === 1'\r\n                    class='btn editor__profile-btn--warn btn--warn'\r\n                    (click)='removeTechnology(idx)'\r\n                    type='button'\r\n                >&#x2715;</button>\r\n            </div>\r\n            <br>\r\n            <button\r\n                    aria-label='Add technology'\r\n                    class='btn editor__profile-btn--add btn--go'\r\n                    type='button'\r\n                    (click)='addTechnologyToForm()'\r\n            >&#x2b;</button>\r\n            <br>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Image URL</label>\r\n            <br><br>\r\n            <input formControlName='image_url' required autofocus>\r\n        </div>\r\n\r\n        <button\r\n                aria-label='Submit profile'\r\n                [ngClass]=\"{'btn--inactive': !profileForm.valid}\"\r\n                class='btn editor__form-btn  editor__form-btn--submit'\r\n                [disabled]='!profileForm.valid'\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<ng-template #loading>\r\n    <app-loading-spinner></app-loading-spinner>\r\n</ng-template>","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { AuthService } from '@ui/core/auth';\r\nimport {\r\n    NotificationService,\r\n    ValidationService,\r\n    TrackingService\r\n} from '@ui/core/services';\r\n\r\nimport {\r\n    PortfolioProfile,\r\n    PortfolioProfileStatus,\r\n    PortfolioProfileTechnology,\r\n    PortfolioProject\r\n} from '../../models';\r\nimport {\r\n    PortfolioEditorService,\r\n    PortfolioProfileService,\r\n    PortfolioApiService,\r\n    PortfolioComparisonService\r\n} from '../../services';\r\n\r\n@Component({\r\n    selector: 'app-portfolio-profile-editor',\r\n    templateUrl: './portfolio-profile-editor.component.html'\r\n})\r\nexport class PortfolioProfileEditorComponent implements OnDestroy, OnInit {\r\n    profileData: PortfolioProfile;\r\n    projectData: PortfolioProject[] = [];\r\n    statusData: PortfolioProfileStatus[] = [];\r\n    technologyData: PortfolioProfileTechnology[] = [];\r\n\r\n    profileForm: FormGroup;\r\n\r\n    isLoaded: boolean = false;\r\n\r\n    constructor(\r\n        private router: Router,\r\n        private changeDetectionRef: ChangeDetectorRef,\r\n        private formBuilder: FormBuilder,\r\n        private authService: AuthService,\r\n        private notificationService: NotificationService,\r\n        private portfolioApiService: PortfolioApiService,\r\n        private portfolioComparisonService: PortfolioComparisonService,\r\n        private portfolioEditorService: PortfolioEditorService,\r\n        private portfolioProfileService: PortfolioProfileService,\r\n        private titleService: Title,\r\n        public trackingService: TrackingService,\r\n        private validationService: ValidationService\r\n    ) { }\r\n\r\n    ngOnDestroy(): void {\r\n        this.portfolioEditorService.setProfile(null);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.titleService.setTitle('Portfolio Profile Editor | Matthew Maxwell');\r\n\r\n        this.checkForAdmin();\r\n\r\n        this.setPageHideEvent();\r\n\r\n        this.initProfileForm();\r\n\r\n        this.isLoaded = true;\r\n    }\r\n\r\n    private checkForAdmin(): void {\r\n        if(!this.authService.isLoggedIn())\r\n            this.router.navigate(['']);\r\n    }\r\n\r\n    private setPageHideEvent(): void {\r\n        window.onpagehide = () => {\r\n            this.portfolioEditorService.setProfile(null);\r\n        }\r\n    }\r\n\r\n    private initProfileForm(): void {\r\n        this.loadProfileData();\r\n        this.loadProjectData();\r\n        this.loadStatusData();\r\n        this.loadTechnologyData();\r\n\r\n        this.buildProfileForm();\r\n    }\r\n\r\n    private loadProfileData(): void {\r\n        this.profileData = this.portfolioEditorService.getProfile();\r\n        console.log(this.profileData);\r\n    }\r\n\r\n    private loadProjectData(): void {\r\n        this.portfolioApiService.getProjects().subscribe((res: PortfolioProject[]) => {\r\n            this.projectData = res.sort(this.portfolioComparisonService.projects);\r\n\r\n            if(this.profileData) {\r\n                this.setProjectControls(this.profileData.projects.map(p => p.id));\r\n            } else {\r\n                this.setProjectControls([]);\r\n            }\r\n\r\n            this.isLoaded = true;\r\n        });\r\n    }\r\n\r\n    private setProjectControls(associatedProjectIds: number[]): void {\r\n        this.projectData.forEach(p => {\r\n            const control: FormControl = this.formBuilder.control(associatedProjectIds.includes(p.id));\r\n            (this.profileForm.controls.projects as FormArray).push(control);\r\n        });\r\n    }\r\n\r\n    private loadStatusData(): void {\r\n        this.portfolioApiService.getProfileStatuses().subscribe((res: PortfolioProfileStatus[]) => {\r\n            this.statusData = res;\r\n        });\r\n    }\r\n\r\n    private loadTechnologyData(): void {\r\n        if(this.profileData) this.technologyData = this.profileData.technologies.sort(this.portfolioComparisonService.profileTechnologies);\r\n    }\r\n\r\n    private buildProfileForm(): void {\r\n        if(this.profileData) {\r\n            this.profileForm = this.formBuilder.group({\r\n                name:         this.formBuilder.control(this.profileData.name,                [Validators.required]),\r\n                status:       this.formBuilder.control(this.profileData.status.status,       [Validators.required]),\r\n                projects:     this.formBuilder.array  (this.projectData,                     [this.validationService.hasMinElements(1)]),\r\n                tagline:      this.formBuilder.control(this.profileData.tagline,             [Validators.required]),\r\n                landing:      this.formBuilder.control(this.profileData.landing,             [Validators.required]),\r\n                about:        this.formBuilder.control(this.profileData.about,               [Validators.required]),\r\n                technologies: this.formBuilder.array  (this.technologyData.map(t => t.name), [Validators.required]),\r\n                image_url:    this.formBuilder.control(this.profileData.image_url,           [Validators.required])\r\n            });\r\n        } else {\r\n            this.profileForm = this.formBuilder.group({\r\n                name:         this.formBuilder.control('',         [Validators.required]),\r\n                status:       this.formBuilder.control('ACTIVE',   [Validators.required]),\r\n                projects:     this.formBuilder.array  ([],         [this.validationService.hasMinElements(1)]),\r\n                tagline:      this.formBuilder.control('',         [Validators.required]),\r\n                landing:      this.formBuilder.control('',         [Validators.required]),\r\n                about:        this.formBuilder.control('',         [Validators.required]),\r\n                technologies: this.formBuilder.array  ([''],       [Validators.required]),\r\n                image_url:    this.formBuilder.control('',         [Validators.required])\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const profile = this.buildFormProfileData();\r\n\r\n        if(profile.status.status === 'ACTIVE')\r\n            this.portfolioProfileService.setActiveProfile(profile);\r\n\r\n        if(profile.id === undefined) {\r\n            this.portfolioApiService.createProfile(profile).subscribe((res: PortfolioProfile) => {\r\n                this.notificationService.createNotification('Successfully created new profile!');\r\n                this.router.navigate(['admin']);\r\n            });\r\n        } else {\r\n            this.portfolioApiService.updateProfile(profile).subscribe((res: PortfolioProfile) => {\r\n                this.notificationService.createNotification('Successfully updated existing profile!');\r\n                this.router.navigate(['admin']);\r\n            });\r\n        }\r\n    }\r\n\r\n    private buildFormProfileData(): PortfolioProfile {\r\n        const projects = this.buildFormProjectData();\r\n        const status = this.buildFormStatusData();\r\n        const technologies = this.buildFormTechnologyData();\r\n\r\n        return new PortfolioProfile({\r\n            ...this.profileForm.value,\r\n            id: this.profileData ? this.profileData.id : undefined,\r\n            projects: projects,\r\n            status: status,\r\n            technologies: technologies\r\n        });\r\n    }\r\n\r\n    private buildFormProjectData(): PortfolioProject[] {\r\n        return this.profileForm.value.projects.map((p, idx) => {\r\n            if(p) return this.projectData[idx];\r\n        }).filter(p => p !== undefined);\r\n    }\r\n\r\n    private buildFormStatusData(): PortfolioProfileStatus {\r\n        return this.statusData.find(s => s.status === this.profileForm.value.status);\r\n    }\r\n\r\n    private buildFormTechnologyData(): PortfolioProfileTechnology[] {\r\n        return this.profileForm.value.technologies.map((t, idx) => {\r\n            return new PortfolioProfileTechnology({ name: t, display_order: idx + 1 });\r\n        });\r\n    }\r\n\r\n    addTechnologyToForm(): void {\r\n        const control: FormControl = this.formBuilder.control('', [Validators.required]);\r\n        (this.profileForm.controls.technologies as FormArray).push(control);\r\n\r\n        // CAUTION: Angular will throw an ExpressionChangedAfterItWasCheckedException after adding new control (b/c array becomes invalid)\r\n        this.changeDetectionRef.detectChanges();\r\n    }\r\n\r\n    changeTechnologyDisplayOrder(oldIdx: number, newIdx: number): void {\r\n        const technologyFormArray = this.profileForm.get('technologies') as FormArray;\r\n        const technologies = [...technologyFormArray.value];\r\n        [technologies[oldIdx], technologies[newIdx]] = [technologies[newIdx], technologies[oldIdx]];\r\n        technologyFormArray.setValue(technologies);\r\n    }\r\n\r\n    removeTechnology(idx: number): void {\r\n        (this.profileForm.controls.technologies as FormArray).removeAt(idx);\r\n    }\r\n}\r\n","<div class='section editor' *ngIf='isLoaded; else loading'>\r\n    <h1 class='editor__header'>Project Editor</h1>\r\n\r\n    <div class=\"line-divider\"></div>\r\n\r\n    <form class='editor__form' [formGroup]='projectForm' (ngSubmit)='onSubmit()'>\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Name</label>\r\n            <br><br>\r\n            <input formControlName='name' required autofocus>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Profiles</label>\r\n            <br><br>\r\n            <div class='form__checkbox-item' formArrayName='profiles' *ngFor='let profile of projectForm.controls.profiles[\"controls\"] trackBy: this.trackingService.objectById; let idx = index'>\r\n                <mat-checkbox [formControlName]='idx'>{{ profileData[idx].name }}</mat-checkbox>\r\n                <br>\r\n            </div>\r\n        </div>\r\n\r\n        <div class='form-field editor__form-field'>\r\n            <label class='form-field-label editor__form-field-label'>Tagline</label>\r\n            <br><br>\r\n            <input formControlName='tagline' required>\r\n        </div>\r\n\r\n        <div class=\"form-field form-field--large editor__form-field\">\r\n            <label class='form-field-label editor__form-field-label'>Description</label>\r\n            <br><br>\r\n            <textarea formControlName='description' required></textarea>\r\n        </div>\r\n\r\n        <div class=\"form-field editor__form-field\">\r\n            <label class='form-field-label editor__form-field-label'>Image URL</label>\r\n            <br><br>\r\n            <input formControlName='image_url' required>\r\n        </div>\r\n\r\n        <div class=\"form-field editor__form-field\">\r\n            <label class='form-field-label editor__form-field-label'>Link</label>\r\n            <br><br>\r\n            <label class='form-field-label--small editor__form-field-label--small'>Name</label>\r\n            <br><br>\r\n            <input formControlName='link_name' required>\r\n            <br><br>\r\n            <label class='form-field-label--small editor__form-field-label--small'>URL</label>\r\n            <br><br>\r\n            <input formControlName='link_url' required>\r\n        </div>\r\n\r\n        <button\r\n            aria-label='Submit project'\r\n            [ngClass]=\"{'btn--inactive': !projectForm.valid}\"\r\n            class='btn editor__form-btn  editor__form-btn--submit'\r\n            [disabled]='!projectForm.valid'\r\n        >\r\n            Submit\r\n        </button>\r\n    </form>\r\n</div>\r\n\r\n<ng-template #loading>\r\n    <app-loading-spinner></app-loading-spinner>\r\n</ng-template>","import { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { AuthService } from '@ui/core/auth';\r\nimport {\r\n    NotificationService,\r\n    ValidationService,\r\n    SeoService, TrackingService\r\n} from '@ui/core/services';\r\n\r\nimport {\r\n    PortfolioProfile,\r\n    PortfolioProject\r\n} from '../../models';\r\nimport {\r\n    PortfolioApiService,\r\n    PortfolioComparisonService,\r\n    PortfolioEditorService\r\n} from '../../services';\r\n\r\n@Component({\r\n    selector: 'app-portfolio-project-editor',\r\n    templateUrl: './portfolio-project-editor.component.html'\r\n})\r\nexport class PortfolioProjectEditorComponent implements OnDestroy, OnInit {\r\n    profileData: PortfolioProfile[] = [];\r\n    projectData: PortfolioProject;\r\n\r\n    projectForm: FormGroup;\r\n\r\n    isLoaded: boolean = false;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private cdRef: ChangeDetectorRef,\r\n        private notificationService: NotificationService,\r\n        private portfolioApiService: PortfolioApiService,\r\n        private portfolioComparisonService: PortfolioComparisonService,\r\n        private portfolioEditorService: PortfolioEditorService,\r\n        private seoService: SeoService,\r\n        private titleService: Title,\r\n        public trackingService: TrackingService,\r\n        private validationService: ValidationService,\r\n        private formBuilder: FormBuilder,\r\n        private router: Router\r\n    ) {\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.portfolioEditorService.setProject(null);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.titleService.setTitle('Portfolio Project Editor | Matthew Maxwell')\r\n\r\n        this.checkForAdmin();\r\n\r\n        this.setPageHideEvent();\r\n\r\n        this.initProjectForm();\r\n    }\r\n\r\n    private checkForAdmin(): void {\r\n        if (!this.authService.isLoggedIn())\r\n            this.router.navigate(['']);\r\n    }\r\n\r\n    private setPageHideEvent(): void {\r\n        window.onpagehide = () => {\r\n            this.portfolioEditorService.setProject(null);\r\n        };\r\n    }\r\n\r\n    private initProjectForm(): void {\r\n        this.loadProjectData();\r\n        this.loadProfileData();\r\n\r\n        this.buildProjectForm();\r\n    }\r\n\r\n    private loadProjectData(): void {\r\n        this.projectData = this.portfolioEditorService.getProject();\r\n    }\r\n\r\n    private loadProfileData(): void {\r\n        this.portfolioApiService.getProfiles().subscribe((res: PortfolioProfile[]) => {\r\n            this.profileData = res.sort(this.portfolioComparisonService.profiles);\r\n\r\n            if (this.projectData) {\r\n                this.setProfileControls(this.projectData.profiles.map(p => p.id));\r\n            } else {\r\n                this.setProfileControls([]);\r\n            }\r\n\r\n            this.isLoaded = true;\r\n        });\r\n    }\r\n\r\n    private setProfileControls(associatedProfileIds: number[]): void {\r\n        this.profileData.forEach(p => {\r\n            const control: FormControl = this.formBuilder.control(associatedProfileIds.includes(p.id));\r\n            (this.projectForm.controls.profiles as FormArray).push(control);\r\n        });\r\n    }\r\n\r\n    private buildProjectForm(): void {\r\n        if (this.projectData) {\r\n            this.projectForm = this.formBuilder.group({\r\n                name: this.formBuilder.control(this.projectData.name, [Validators.required]),\r\n                profiles: this.formBuilder.array(this.profileData, [this.validationService.hasMinElements()]),\r\n                tagline: this.formBuilder.control(this.projectData.tagline, [Validators.required]),\r\n                description: this.formBuilder.control(this.projectData.description, [Validators.required]),\r\n                image_url: this.formBuilder.control(this.projectData.image_url, [Validators.required]),\r\n                link_name: this.formBuilder.control(this.projectData.link_name, [Validators.required]),\r\n                link_url: this.formBuilder.control(this.projectData.link_url, [Validators.required])\r\n            });\r\n        } else {\r\n            this.projectForm = this.formBuilder.group({\r\n                name: this.formBuilder.control('', [Validators.required]),\r\n                profiles: this.formBuilder.array([], [this.validationService.hasMinElements()]),\r\n                tagline: this.formBuilder.control('', [Validators.required]),\r\n                description: this.formBuilder.control('', [Validators.required]),\r\n                image_url: this.formBuilder.control('', [Validators.required]),\r\n                link_name: this.formBuilder.control('', [Validators.required]),\r\n                link_url: this.formBuilder.control('', [Validators.required])\r\n            });\r\n        }\r\n    }\r\n\r\n    onSubmit(): void {\r\n        const project = this.buildFormProjectData();\r\n\r\n        if (project.id === undefined) {\r\n            this.portfolioApiService.createProject(project).subscribe((res: PortfolioProject) => {\r\n                this.notificationService.createNotification(`Successfully created new portfolio project!`);\r\n                this.router.navigate([`projects/${ this.seoService.getCanonicalUrl(res.id, res.name) }`]);\r\n            });\r\n        } else {\r\n            this.portfolioApiService.updateProject(project).subscribe((res: PortfolioProject) => {\r\n                this.notificationService.createNotification(`Successfully updated existing portfolio project!`);\r\n                this.router.navigate([`projects/${ this.seoService.getCanonicalUrl(res.id, res.name) }`]);\r\n            });\r\n        }\r\n    }\r\n\r\n    private buildFormProjectData(): PortfolioProject {\r\n        const profiles = this.buildFormProfileData();\r\n\r\n        return new PortfolioProject({\r\n            ...this.projectForm.value,\r\n            id: this.projectData ? this.projectData.id : undefined,\r\n            profiles: profiles\r\n        });\r\n    }\r\n\r\n    private buildFormProfileData(): PortfolioProfile[] {\r\n        return this.projectForm.value.profiles.map((p, idx) => {\r\n            if (p) return this.profileData[idx];\r\n        }).filter(p => p !== undefined);\r\n    }\r\n}\r\n","<div class='section project' *ngIf='isLoaded; else loading'>\r\n    <h1 class='project__name'>{{ project.name }}</h1>\r\n    <h2 class='project__tagline'>{{ project.tagline }}</h2>\r\n\r\n    <div class=\"project__btn-container\" *ngIf='isAdmin'>\r\n        <a class='btn project__btn' (click)='sendProjectToEditor()' routerLink='/portfolio/projects/editor'>\r\n            &#x270F;\r\n        </a>\r\n        <a class='btn project__btn btn--warn' (click)='deleteProject()' routerLink=''>\r\n            &#x2715;\r\n        </a>\r\n    </div>\r\n\r\n    <p class='project__date' [innerHtml]='\"Updated: \" + seoService.getFormattedDate(project.updated_at)'></p>\r\n\r\n    <div class='project__external-container'>\r\n        <a class='icon project__external-icon' [href]='project.link_url' target='_blank' rel='noopener noreferrer'>\r\n            <app-icon [name]='project.link_name'></app-icon>\r\n        </a>\r\n    </div>\r\n\r\n    <div class=\"line-divider\"></div>\r\n\r\n    <div class='project__image-link-container'>\r\n        <a class='project__image-link' [href]='project.link_url' target='_blank' rel='noopener noreferrer'>\r\n            <picture>\r\n                <source [srcset]=\"project.image_url\" type=\"image/webp\">\r\n                <source [srcset]=\"project.image_url.substring(0, project.image_url.length - 4) + 'png'\" type=\"image/png\">\r\n                <img class='project__image' [src]='project.image_url.substring(0, project.image_url.length - 4) + \"png\"' [alt]='project.name + \"image\"' height=150>\r\n            </picture>\r\n        </a>\r\n    </div>\r\n\r\n    <markdown [data]='project.description'></markdown>\r\n\r\n</div>\r\n\r\n<ng-template #loading>\r\n    <app-loading-spinner></app-loading-spinner>\r\n</ng-template>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { PortfolioComponent } from './portfolio.component';\r\n\r\nimport {\r\n    PortfolioProfileEditorComponent,\r\n    PortfolioProjectEditorComponent,\r\n    PortfolioProjectViewComponent\r\n} from './components';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',\r\n        component: PortfolioComponent,\r\n        children: [\r\n            {\r\n                path: 'profiles/editor',\r\n                component: PortfolioProfileEditorComponent\r\n            },\r\n            {\r\n                path: 'projects/editor',\r\n                component: PortfolioProjectEditorComponent\r\n            },\r\n            {\r\n                path: 'projects/:id/:uri',\r\n                component: PortfolioProjectViewComponent\r\n            }\r\n        ]\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ]\r\n})\r\nexport class PortfolioRoutingModule { }","import { Component, OnInit } from '@angular/core';\r\nimport { Title } from '@angular/platform-browser';\r\nimport { Router } from '@angular/router';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\n\r\nimport { AuthService } from '@ui/core/auth';\r\nimport { NotificationService, SeoService } from '@ui/core/services';\r\n\r\nimport { PortfolioProject } from '../../models';\r\nimport { PortfolioApiService, PortfolioEditorService } from '../../services';\r\n\r\n@Component({\r\n    selector: 'app-portfolio-project-view',\r\n    templateUrl: './portfolio-project-view.component.html',\r\n    styleUrls: ['./portfolio-project-view.component.scss']\r\n})\r\nexport class PortfolioProjectViewComponent implements OnInit {\r\n    isAdmin: boolean = false;\r\n    isLoaded: boolean = false;\r\n\r\n    project: PortfolioProject;\r\n\r\n    constructor(\r\n        private authService: AuthService,\r\n        private notificationService: NotificationService,\r\n        private portfolioProjectApiService: PortfolioApiService,\r\n        private portfolioProjectEditorService: PortfolioEditorService,\r\n        public seoService: SeoService,\r\n        private titleService: Title,\r\n        private router: Router\r\n    ) { }\r\n\r\n    ngOnInit(): void {\r\n        this.isAdmin = this.authService.isLoggedIn();\r\n\r\n        const projectId = this.seoService.getIdFromUrl(this.router.url);\r\n        if(!projectId) {\r\n            this.notificationService.createNotification('Unable to find portfolio project ID.');\r\n            this.router.navigate(['']);\r\n            return;\r\n        }\r\n\r\n        this.portfolioProjectApiService.getProject(projectId).subscribe((res: PortfolioProject) => {\r\n            this.project = res;\r\n\r\n            this.titleService.setTitle(`${res.name} - ${res.tagline} | Portfolio | Matthew Maxwell`);\r\n\r\n            this.isLoaded = true;\r\n        }, (error: HttpErrorResponse) => {\r\n            this.notificationService.createNotification(error.error.message);\r\n            this.router.navigate(['']);\r\n        });\r\n    }\r\n\r\n    sendProjectToEditor(): void {\r\n        this.portfolioProjectEditorService.setProject(this.project);\r\n    }\r\n\r\n    deleteProject(): void {\r\n        this.portfolioProjectApiService.deleteProject(this.project.id).subscribe((res: any) => {\r\n            this.notificationService.createNotification('Successfully deleted the project!');\r\n            this.router.navigate(['']);\r\n        });\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { MarkdownModule } from 'ngx-markdown';\r\n\r\nimport { CoreModule } from '@ui/core/core.module';\r\nimport { MaterialModule } from '@ui/modules/material/material.module';\r\n\r\nimport { PortfolioComponent } from './portfolio.component';\r\nimport { PortfolioRoutingModule } from './portfolio-routing.module';\r\n\r\nimport {\r\n    PortfolioProfileEditorComponent,\r\n    PortfolioProjectCollectionComponent,\r\n    PortfolioProjectViewComponent,\r\n    PortfolioProjectEditorComponent\r\n} from './components';\r\nimport {\r\n    PortfolioApiService,\r\n    PortfolioComparisonService\r\n} from './services';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        PortfolioComponent,\r\n        PortfolioProfileEditorComponent,\r\n        PortfolioProjectCollectionComponent,\r\n        PortfolioProjectEditorComponent,\r\n        PortfolioProjectViewComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        CoreModule,\r\n        MarkdownModule.forRoot(),\r\n        MaterialModule,\r\n        PortfolioRoutingModule,\r\n        ReactiveFormsModule\r\n    ],\r\n    exports: [\r\n        PortfolioProjectCollectionComponent\r\n    ],\r\n    providers: [\r\n        PortfolioApiService,\r\n        PortfolioComparisonService\r\n    ]\r\n})\r\nexport class PortfolioModule { }"]}